// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yespo_protocol.proto

#ifndef PROTOBUF_yespo_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_yespo_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace yespo {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_yespo_5fprotocol_2eproto();
void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

class AccessSvrHeartbeatFailReq;
class AmiSvrHangupReq;
class AmiSvrHangupRsp;
class AppCallReadyReq;
class AppCallStatusReq;
class AppCallTerminateReq;
class AppCalleeNotifyReq;
class AppHeartbeatReq;
class AppHeartbeatRsp;
class AppPhotoMsgReq;
class AppRepetitionLogin;
class AppVideoRecvReq;
class AppVideoSendReq;
class BillingSvrFinishBillingReq;
class BillingSvrFinishBillingRsp;
class BillingSvrStartBillingReq;
class BillingSvrStartBillingRsp;
class BillingSvrTimerBillingReq;
class Header;
class LoginSvrLoginReq;
class LoginSvrLoginRsp;
class LoginSvrLogoutReq;
class LoginSvrLogoutRsp;
class RoomsvrAstCallStateReq;
class RoomsvrAstCallStateRsp;
class RoomsvrAstCallStatusReq;
class RoomsvrAstCallStatusRsp;
class RoomsvrAstListCallReq;
class RoomsvrAstListCallRsp;
class RoomsvrAstPeerStatusReq;
class RoomsvrAstPeerStatusRsp;
class RoomsvrCallCancelReq;
class RoomsvrCallCancelRsp;
class RoomsvrCheckExpireReq;
class RoomsvrDistributeReq;
class RoomsvrDistributeRsp;
class RoomsvrInsufficientReq;
class RoomsvrInsufficientRsp;
class RoomsvrPartnerStatusItem;
class RoomsvrPartnerStatusReq;
class RoomsvrPartnerStatusRsp;
class RoomsvrVideoRecvReq;
class RoomsvrVideoRecvRsp;
class RoomsvrVideoSendReq;
class RoomsvrVideoSendRsp;
class RspMsg;
class StatusSvrAdduserReq;
class StatusSvrAdduserRsp;
class StatusSvrDeluserReq;
class StatusSvrDeluserRsp;
class StatusSvrStatusItem;
class StatusSvrStatusQueryReq;
class StatusSvrStatusQueryRsp;
class StatusSvrUserInfoReq;
class StatusSvrUserInfoRsp;
class UserAgent;

enum NodeType {
  NODE_TYPE_MIN = 0,
  NODE_TYPE_APP = 1,
  NODE_TYPE_ACCESSSVR = 2,
  NODE_TYPE_LOGINSVR = 3,
  NODE_TYPE_STATUSSVR = 4,
  NODE_TYPE_PUSHSVR = 5,
  NODE_TYPE_ROOMSVR = 6,
  NODE_TYPE_MEDIASVR = 7,
  NODE_TYPE_BILLINGSVR = 8,
  NODE_TYPE_AMISVR = 9,
  NODE_TYPE_MAX = 10,
  NodeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NodeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NodeType_IsValid(int value);
const NodeType NodeType_MIN = NODE_TYPE_MIN;
const NodeType NodeType_MAX = NODE_TYPE_MAX;
const int NodeType_ARRAYSIZE = NodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeType_descriptor();
inline const ::std::string& NodeType_Name(NodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeType_descriptor(), value);
}
inline bool NodeType_Parse(
    const ::std::string& name, NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeType>(
    NodeType_descriptor(), name, value);
}
enum MsgType {
  MSG_TYPE_MIN = 0,
  MSG_TYPE_APP_TYPE_MIN = 256,
  MSG_TYPE_APP_HEARTBEAT_REQ = 257,
  MSG_TYPE_APP_HEARTBEAT_RSP = 258,
  MSG_TYPE_APP_REPETITION_LOGIN_REQ = 259,
  MSG_TYPE_APP_CALLEE_NOTIFY_REQ = 261,
  MSG_TYPE_APP_CALL_READY_REQ = 263,
  MSG_TYPE_APP_PHOTO_MSG_REQ = 265,
  MSG_TYPE_APP_CALL_STATUS_REQ = 267,
  MSG_TYPE_APP_CALL_TERMINATE_REQ = 269,
  MSG_TYPE_APP_VIDEO_SEND_REQ = 271,
  MSG_TYPE_APP_VIDEO_RECV_REQ = 273,
  MSG_TYPE_APP_TYPE_MAX = 511,
  MSG_TYPE_ACCESSSVR_TYPE_MIN = 512,
  MSG_TYPE_ACCESSSVR_HEARTBEAT_FAIL_REQ = 515,
  MSG_TYPE_ACCESSSVR_TYPE_MAX = 767,
  MSG_TYPE_LOGINSVR_TYPE_MIN = 768,
  MSG_TYPE_LOGINSVR_LOGIN_REQ = 769,
  MSG_TYPE_LOGINSVR_LOGIN_RSP = 770,
  MSG_TYPE_LOGINSVR_LOGOUT_REQ = 771,
  MSG_TYPE_LOGINSVR_LOGOUT_RSP = 772,
  MSG_TYPE_LOGINSVR_TYPE_MAX = 1023,
  MSG_TYPE_STATUSSVR_TYPE_MIN = 1024,
  MSG_TYPE_STATUSSVR_ADDUSER_REQ = 1025,
  MSG_TYPE_STATUSSVR_ADDUSER_RSP = 1026,
  MSG_TYPE_STATUSSVR_DELUSER_REQ = 1027,
  MSG_TYPE_STATUSSVR_DELUSER_RSP = 1028,
  MSG_TYPE_STATUSSVR_STATUS_REQ = 1029,
  MSG_TYPE_STATUSSVR_STATUS_RSP = 1030,
  MSG_TYPE_STATUSSVR_USERINFO_REQ = 1031,
  MSG_TYPE_STATUSSVR_USERINFO_RSP = 1032,
  MSG_TYPE_STATUSSVR_TYPE_MAX = 1279,
  MSG_TYPE_PUSHSVR_TYPE_MIN = 1280,
  MSG_TYPE_PUSHSVR_TYPE_MAX = 1535,
  MSG_TYPE_ROOMSVR_TYPE_MIN = 1536,
  MSG_TYPE_ROOMSVR_DISTRIBUTE_REQ = 1537,
  MSG_TYPE_ROOMSVR_DISTRIBUTE_RSP = 1538,
  MSG_TYPE_ROOMSVR_CALL_CANCEL_REQ = 1539,
  MSG_TYPE_ROOMSVR_CALL_CANCEL_RSP = 1540,
  MSG_TYPE_ROOMSVR_PARTNER_STATUS_REQ = 1541,
  MSG_TYPE_ROOMSVR_PARTNER_STATUS_RSP = 1542,
  MSG_TYPE_ROOMSVR_CHECK_EXPIRE_REQ = 1543,
  MSG_TYPE_ROOMSVR_AST_PEERSTATUS_REQ = 1545,
  MSG_TYPE_ROOMSVR_AST_PEERSTATUS_RSP = 1546,
  MSG_TYPE_ROOMSVR_AST_LIST_CALL_REQ = 1547,
  MSG_TYPE_ROOMSVR_AST_LIST_CALL_RSP = 1548,
  MSG_TYPE_ROOMSVR_AST_CALL_STATUS_REQ = 1549,
  MSG_TYPE_ROOMSVR_AST_CALL_STATUS_RSP = 1550,
  MSG_TYPE_ROOMSVR_VIDEO_SEND_REQ = 1553,
  MSG_TYPE_ROOMSVR_VIDEO_SEND_RSP = 1554,
  MSG_TYPE_ROOMSVR_VIDEO_RECV_REQ = 1555,
  MSG_TYPE_ROOMSVR_VIDEO_RECV_RSP = 1556,
  MSG_TYPE_ROOMSVR_AST_CALL_STATE_REQ = 1557,
  MSG_TYPE_ROOMSVR_AST_CALL_STATE_RSP = 1558,
  MSG_TYPE_ROOMSVR_INSUFFICIENT_REQ = 1559,
  MSG_TYPE_ROOMSVR_INSUFFICIENT_RSP = 1560,
  MSG_TYPE_ROOMSVR_TYPE_MAX = 1791,
  MSG_TYPE_BILLINGSVR_TYPE_MIN = 2048,
  MSG_TYPE_BILLINGSVR_TIMERBILLING_REQ = 2051,
  MSG_TYPE_BILLINGSVR_STARTBILLING_REQ = 2053,
  MSG_TYPE_BILLINGSVR_STARTBILLING_RSP = 2054,
  MSG_TYPE_BILLINGSVR_FINISHBILLING_REQ = 2055,
  MSG_TYPE_BILLINGSVR_FINISHBILLING_RSP = 2056,
  MSG_TYPE_BILLINGSVR_TYPE_MAX = 2303,
  MSG_TYPE_AMISVR_TYPE_MIN = 2304,
  MSG_TYPE_AMISVR_HANGUP_REQ = 2305,
  MSG_TYPE_AMISVR_HANGUP_RSP = 2306,
  MSG_TYPE_AMISVR_TYPE_MAX = 2559,
  MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = MSG_TYPE_MIN;
const MsgType MsgType_MAX = MSG_TYPE_AMISVR_TYPE_MAX;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
enum UserType {
  USER_TYPE_UNKNOWN = 0,
  USER_TYPE_ANDROID = 1,
  USER_TYPE_IOS = 2,
  USER_TYPE_WINDOWS = 3,
  USER_TYPE_MAC = 4,
  UserType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserType_IsValid(int value);
const UserType UserType_MIN = USER_TYPE_UNKNOWN;
const UserType UserType_MAX = USER_TYPE_MAC;
const int UserType_ARRAYSIZE = UserType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserType_descriptor();
inline const ::std::string& UserType_Name(UserType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserType_descriptor(), value);
}
inline bool UserType_Parse(
    const ::std::string& name, UserType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserType>(
    UserType_descriptor(), name, value);
}
enum OnlineStatus {
  ONLINE_STATUS_OFFLINE = 0,
  ONLINE_STATUS_ONLINE = 1,
  OnlineStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OnlineStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OnlineStatus_IsValid(int value);
const OnlineStatus OnlineStatus_MIN = ONLINE_STATUS_OFFLINE;
const OnlineStatus OnlineStatus_MAX = ONLINE_STATUS_ONLINE;
const int OnlineStatus_ARRAYSIZE = OnlineStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* OnlineStatus_descriptor();
inline const ::std::string& OnlineStatus_Name(OnlineStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    OnlineStatus_descriptor(), value);
}
inline bool OnlineStatus_Parse(
    const ::std::string& name, OnlineStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OnlineStatus>(
    OnlineStatus_descriptor(), name, value);
}
enum RoomStatus {
  ROOM_STATUS_NOT_EXIST = 0,
  ROOM_STATUS_CREATED = 1,
  ROOM_STATUS_CALLER_REGISTERED = 2,
  ROOM_STATUS_PARTNER_REGISTERED = 3,
  ROOM_STATUS_ALL_REGISTERED = 4,
  ROOM_STATUS_CALLER_START_CALL = 5,
  ROOM_STATUS_CALL_CONNECTED = 6,
  ROOM_STATUS_FINISHED = 7,
  RoomStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RoomStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RoomStatus_IsValid(int value);
const RoomStatus RoomStatus_MIN = ROOM_STATUS_NOT_EXIST;
const RoomStatus RoomStatus_MAX = ROOM_STATUS_FINISHED;
const int RoomStatus_ARRAYSIZE = RoomStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomStatus_descriptor();
inline const ::std::string& RoomStatus_Name(RoomStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomStatus_descriptor(), value);
}
inline bool RoomStatus_Parse(
    const ::std::string& name, RoomStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomStatus>(
    RoomStatus_descriptor(), name, value);
}
enum BillingStatus {
  BILLING_STATUS_START = 0,
  BILLING_STATUS_FINISHED = 1,
  BillingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BillingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BillingStatus_IsValid(int value);
const BillingStatus BillingStatus_MIN = BILLING_STATUS_START;
const BillingStatus BillingStatus_MAX = BILLING_STATUS_FINISHED;
const int BillingStatus_ARRAYSIZE = BillingStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* BillingStatus_descriptor();
inline const ::std::string& BillingStatus_Name(BillingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    BillingStatus_descriptor(), value);
}
inline bool BillingStatus_Parse(
    const ::std::string& name, BillingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BillingStatus>(
    BillingStatus_descriptor(), name, value);
}
enum AstPeerStatus {
  AST_PEER_STATUS_UNKNOWN = 0,
  AST_PEER_STATUS_REGISTERED = 1,
  AST_PEER_STATUS_UNREGISTERED = 2,
  AST_PEER_STATUS_UNREACHABLE = 3,
  AstPeerStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AstPeerStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AstPeerStatus_IsValid(int value);
const AstPeerStatus AstPeerStatus_MIN = AST_PEER_STATUS_UNKNOWN;
const AstPeerStatus AstPeerStatus_MAX = AST_PEER_STATUS_UNREACHABLE;
const int AstPeerStatus_ARRAYSIZE = AstPeerStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* AstPeerStatus_descriptor();
inline const ::std::string& AstPeerStatus_Name(AstPeerStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    AstPeerStatus_descriptor(), value);
}
inline bool AstPeerStatus_Parse(
    const ::std::string& name, AstPeerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AstPeerStatus>(
    AstPeerStatus_descriptor(), name, value);
}
enum AstCallStatus {
  AST_CALL_STATUS_UNKNOWN = 0,
  AST_CALL_STATUS_CALLPARTNER = 1,
  AST_CALL_STATUS_CALLCALLEE = 2,
  AST_CALL_STATUS_CONNECTED = 3,
  AST_CALL_STATUS_FINISHED = 4,
  AstCallStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AstCallStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AstCallStatus_IsValid(int value);
const AstCallStatus AstCallStatus_MIN = AST_CALL_STATUS_UNKNOWN;
const AstCallStatus AstCallStatus_MAX = AST_CALL_STATUS_FINISHED;
const int AstCallStatus_ARRAYSIZE = AstCallStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* AstCallStatus_descriptor();
inline const ::std::string& AstCallStatus_Name(AstCallStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    AstCallStatus_descriptor(), value);
}
inline bool AstCallStatus_Parse(
    const ::std::string& name, AstCallStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AstCallStatus>(
    AstCallStatus_descriptor(), name, value);
}
enum VideoSendStatus {
  VIDEO_STATUS_UNKNOWN = 0,
  VIDEO_STATUS_OPEN = 1,
  VIDEO_STATUS_CLOSE = 2,
  VideoSendStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VideoSendStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VideoSendStatus_IsValid(int value);
const VideoSendStatus VideoSendStatus_MIN = VIDEO_STATUS_UNKNOWN;
const VideoSendStatus VideoSendStatus_MAX = VIDEO_STATUS_CLOSE;
const int VideoSendStatus_ARRAYSIZE = VideoSendStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* VideoSendStatus_descriptor();
inline const ::std::string& VideoSendStatus_Name(VideoSendStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    VideoSendStatus_descriptor(), value);
}
inline bool VideoSendStatus_Parse(
    const ::std::string& name, VideoSendStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VideoSendStatus>(
    VideoSendStatus_descriptor(), name, value);
}
enum VideoRecvResult {
  VIDEO_RESULT_UNKNOWN = 0,
  VIDEO_RESULT_ACCEPT = 1,
  VIDEO_RESULT_REJECT = 2,
  VideoRecvResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VideoRecvResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VideoRecvResult_IsValid(int value);
const VideoRecvResult VideoRecvResult_MIN = VIDEO_RESULT_UNKNOWN;
const VideoRecvResult VideoRecvResult_MAX = VIDEO_RESULT_REJECT;
const int VideoRecvResult_ARRAYSIZE = VideoRecvResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* VideoRecvResult_descriptor();
inline const ::std::string& VideoRecvResult_Name(VideoRecvResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    VideoRecvResult_descriptor(), value);
}
inline bool VideoRecvResult_Parse(
    const ::std::string& name, VideoRecvResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VideoRecvResult>(
    VideoRecvResult_descriptor(), name, value);
}
enum AstCallRole {
  AST_CALL_ROLE_UNKNOWN = 0,
  AST_CALL_ROLE_PARTNER = 1,
  AST_CALL_ROLE_CALLEE = 2,
  AstCallRole_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AstCallRole_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AstCallRole_IsValid(int value);
const AstCallRole AstCallRole_MIN = AST_CALL_ROLE_UNKNOWN;
const AstCallRole AstCallRole_MAX = AST_CALL_ROLE_CALLEE;
const int AstCallRole_ARRAYSIZE = AstCallRole_MAX + 1;

const ::google::protobuf::EnumDescriptor* AstCallRole_descriptor();
inline const ::std::string& AstCallRole_Name(AstCallRole value) {
  return ::google::protobuf::internal::NameOfEnum(
    AstCallRole_descriptor(), value);
}
inline bool AstCallRole_Parse(
    const ::std::string& name, AstCallRole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AstCallRole>(
    AstCallRole_descriptor(), name, value);
}
enum AstCallState {
  AST_CALL_STATE_UNKNOWN = 0,
  AST_CALL_STATE_ANSWERED = 1,
  AST_CALL_STATE_FAILED = 2,
  AST_CALL_STATE_END = 3,
  AstCallState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AstCallState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AstCallState_IsValid(int value);
const AstCallState AstCallState_MIN = AST_CALL_STATE_UNKNOWN;
const AstCallState AstCallState_MAX = AST_CALL_STATE_END;
const int AstCallState_ARRAYSIZE = AstCallState_MAX + 1;

const ::google::protobuf::EnumDescriptor* AstCallState_descriptor();
inline const ::std::string& AstCallState_Name(AstCallState value) {
  return ::google::protobuf::internal::NameOfEnum(
    AstCallState_descriptor(), value);
}
inline bool AstCallState_Parse(
    const ::std::string& name, AstCallState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AstCallState>(
    AstCallState_descriptor(), name, value);
}
enum RspCode {
  RSP_CODE_MIN = 0,
  RSP_CODE_CONN_TIMEDOUT = 1,
  RSP_CODE_APP_MIN = 101,
  RSP_CODE_APP_MAX = 199,
  RSP_CODE_ACCESSSVR_MIN = 201,
  RSP_CODE_ACCESSSVR_USER_NOTEXIST = 202,
  RSP_CODE_ACCESSSVR_MAX = 299,
  RSP_CODE_LOGINSVR_MIN = 301,
  RSP_CODE_LOGINSVR_INVALID_TOKEN = 302,
  RSP_CODE_LOGINSVR_OPERATION_TIMEDOUT = 303,
  RSP_CODE_LOGINSVR_MAX = 399,
  RSP_CODE_STATUSSVR_MIN = 401,
  RSP_CODE_STATUSSVR_ADDUSER_EXIST = 402,
  RSP_CODE_STATUSSVR_DELUSER_NOTEXIST = 403,
  RSP_CODE_STATUSSVR_USER_NOTEXIST = 404,
  RSP_CODE_STATUSSVR_MAX = 499,
  RSP_CODE_PUSHSVR_MIN = 501,
  RSP_CODE_PUSHSVR_MAX = 599,
  RSP_CODE_ROOMSVR_MIN = 601,
  RSP_CODE_ROOMSVR_NONE_AVAILABLE = 602,
  RSP_CODE_ROOMSVR_PARTNER_UNAVAILABLE = 603,
  RSP_CODE_ROOMSVR_INVALID_REQUEST = 604,
  RSP_CODE_ROOMSVR_NO_CALL_PROCESSING = 605,
  RSP_CODE_ROOMSVR_DATABASE_ERROR = 606,
  RSP_CODE_ROOMSVR_DBUPDATE_ERROR = 607,
  RSP_CODE_ROOMSVR_PUSHSVR_COMM_ERROR = 608,
  RSP_CODE_ROOMSVR_USERSVR_COMM_ERROR = 609,
  RSP_CODE_ROOMSVR_STATUSSVR_COMM_ERROR = 610,
  RSP_CODE_ROOMSVR_INVALID_CDR_ID = 611,
  RSP_CODE_ROOMSVR_MEDIASERVER_UNAVAILABLE = 612,
  RSP_CODE_ROOMSVR_TOO_MANY_PARTNERS = 613,
  RSP_CODE_ROOMSVR_PARTNER_OFFLINE = 614,
  RSP_CODE_ROOMSVR_ROOM_NON_EXISTENT = 615,
  RSP_CODE_ROOMSVR_BILLINGSVR_COMM_ERROR = 616,
  RSP_CODE_ROOMSVR_MAX = 699,
  RSP_CODE_BILLINGSVR_MIN = 801,
  RSP_CODE_BILLINGSVR_CALLING_NONEXIST = 802,
  RSP_CODE_BILLINGVR_MAX = 899,
  RSP_CODE_AMISVR_MIN = 901,
  RSP_CODE_AMISVR_ROOMSVR_COMM_ERROR = 902,
  RSP_CODE_AMIVR_MAX = 999,
  RspCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RspCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RspCode_IsValid(int value);
const RspCode RspCode_MIN = RSP_CODE_MIN;
const RspCode RspCode_MAX = RSP_CODE_AMIVR_MAX;
const int RspCode_ARRAYSIZE = RspCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RspCode_descriptor();
inline const ::std::string& RspCode_Name(RspCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RspCode_descriptor(), value);
}
inline bool RspCode_Parse(
    const ::std::string& name, RspCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RspCode>(
    RspCode_descriptor(), name, value);
}
// ===================================================================

class UserAgent : public ::google::protobuf::Message {
 public:
  UserAgent();
  virtual ~UserAgent();

  UserAgent(const UserAgent& from);

  inline UserAgent& operator=(const UserAgent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAgent& default_instance();

  void Swap(UserAgent* other);

  // implements Message ----------------------------------------------

  inline UserAgent* New() const { return New(NULL); }

  UserAgent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAgent& from);
  void MergeFrom(const UserAgent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserAgent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string os_type = 1;
  void clear_os_type();
  static const int kOsTypeFieldNumber = 1;
  const ::std::string& os_type() const;
  void set_os_type(const ::std::string& value);
  void set_os_type(const char* value);
  void set_os_type(const char* value, size_t size);
  ::std::string* mutable_os_type();
  ::std::string* release_os_type();
  void set_allocated_os_type(::std::string* os_type);

  // optional string os_ver = 2;
  void clear_os_ver();
  static const int kOsVerFieldNumber = 2;
  const ::std::string& os_ver() const;
  void set_os_ver(const ::std::string& value);
  void set_os_ver(const char* value);
  void set_os_ver(const char* value, size_t size);
  ::std::string* mutable_os_ver();
  ::std::string* release_os_ver();
  void set_allocated_os_ver(::std::string* os_ver);

  // optional string model = 3;
  void clear_model();
  static const int kModelFieldNumber = 3;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional string client_ver = 4;
  void clear_client_ver();
  static const int kClientVerFieldNumber = 4;
  const ::std::string& client_ver() const;
  void set_client_ver(const ::std::string& value);
  void set_client_ver(const char* value);
  void set_client_ver(const char* value, size_t size);
  ::std::string* mutable_client_ver();
  ::std::string* release_client_ver();
  void set_allocated_client_ver(::std::string* client_ver);

  // optional string carrier_operator = 5;
  void clear_carrier_operator();
  static const int kCarrierOperatorFieldNumber = 5;
  const ::std::string& carrier_operator() const;
  void set_carrier_operator(const ::std::string& value);
  void set_carrier_operator(const char* value);
  void set_carrier_operator(const char* value, size_t size);
  ::std::string* mutable_carrier_operator();
  ::std::string* release_carrier_operator();
  void set_allocated_carrier_operator(::std::string* carrier_operator);

  // @@protoc_insertion_point(class_scope:yespo.UserAgent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr os_type_;
  ::google::protobuf::internal::ArenaStringPtr os_ver_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr client_ver_;
  ::google::protobuf::internal::ArenaStringPtr carrier_operator_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UserAgent* default_instance_;
};
// -------------------------------------------------------------------

class Header : public ::google::protobuf::Message {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  void Swap(Header* other);

  // implements Message ----------------------------------------------

  inline Header* New() const { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional uint64 msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 msg_id() const;
  void set_msg_id(::google::protobuf::uint64 value);

  // optional uint64 user_id = 3;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional .yespo.UserAgent user_agent = 4;
  bool has_user_agent() const;
  void clear_user_agent();
  static const int kUserAgentFieldNumber = 4;
  const ::yespo::UserAgent& user_agent() const;
  ::yespo::UserAgent* mutable_user_agent();
  ::yespo::UserAgent* release_user_agent();
  void set_allocated_user_agent(::yespo::UserAgent* user_agent);

  // optional uint64 timestamp = 5;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:yespo.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 msg_id_;
  ::google::protobuf::uint64 user_id_;
  ::yespo::UserAgent* user_agent_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::int32 msg_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Header* default_instance_;
};
// -------------------------------------------------------------------

class RspMsg : public ::google::protobuf::Message {
 public:
  RspMsg();
  virtual ~RspMsg();

  RspMsg(const RspMsg& from);

  inline RspMsg& operator=(const RspMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspMsg& default_instance();

  void Swap(RspMsg* other);

  // implements Message ----------------------------------------------

  inline RspMsg* New() const { return New(NULL); }

  RspMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspMsg& from);
  void MergeFrom(const RspMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RspMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rsp_code = 1;
  void clear_rsp_code();
  static const int kRspCodeFieldNumber = 1;
  ::google::protobuf::int32 rsp_code() const;
  void set_rsp_code(::google::protobuf::int32 value);

  // optional string rsp_msg = 2;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 2;
  const ::std::string& rsp_msg() const;
  void set_rsp_msg(const ::std::string& value);
  void set_rsp_msg(const char* value);
  void set_rsp_msg(const char* value, size_t size);
  ::std::string* mutable_rsp_msg();
  ::std::string* release_rsp_msg();
  void set_allocated_rsp_msg(::std::string* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RspMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr rsp_msg_;
  ::google::protobuf::int32 rsp_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RspMsg* default_instance_;
};
// -------------------------------------------------------------------

class AppHeartbeatReq : public ::google::protobuf::Message {
 public:
  AppHeartbeatReq();
  virtual ~AppHeartbeatReq();

  AppHeartbeatReq(const AppHeartbeatReq& from);

  inline AppHeartbeatReq& operator=(const AppHeartbeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppHeartbeatReq& default_instance();

  void Swap(AppHeartbeatReq* other);

  // implements Message ----------------------------------------------

  inline AppHeartbeatReq* New() const { return New(NULL); }

  AppHeartbeatReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppHeartbeatReq& from);
  void MergeFrom(const AppHeartbeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppHeartbeatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:yespo.AppHeartbeatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppHeartbeatReq* default_instance_;
};
// -------------------------------------------------------------------

class AppHeartbeatRsp : public ::google::protobuf::Message {
 public:
  AppHeartbeatRsp();
  virtual ~AppHeartbeatRsp();

  AppHeartbeatRsp(const AppHeartbeatRsp& from);

  inline AppHeartbeatRsp& operator=(const AppHeartbeatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppHeartbeatRsp& default_instance();

  void Swap(AppHeartbeatRsp* other);

  // implements Message ----------------------------------------------

  inline AppHeartbeatRsp* New() const { return New(NULL); }

  AppHeartbeatRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppHeartbeatRsp& from);
  void MergeFrom(const AppHeartbeatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppHeartbeatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // optional int32 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:yespo.AppHeartbeatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  ::google::protobuf::int32 timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppHeartbeatRsp* default_instance_;
};
// -------------------------------------------------------------------

class AppRepetitionLogin : public ::google::protobuf::Message {
 public:
  AppRepetitionLogin();
  virtual ~AppRepetitionLogin();

  AppRepetitionLogin(const AppRepetitionLogin& from);

  inline AppRepetitionLogin& operator=(const AppRepetitionLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRepetitionLogin& default_instance();

  void Swap(AppRepetitionLogin* other);

  // implements Message ----------------------------------------------

  inline AppRepetitionLogin* New() const { return New(NULL); }

  AppRepetitionLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRepetitionLogin& from);
  void MergeFrom(const AppRepetitionLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppRepetitionLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 user_type = 2;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 2;
  ::google::protobuf::uint32 user_type() const;
  void set_user_type(::google::protobuf::uint32 value);

  // optional string device_token = 3;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 3;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // optional string accesssvr_ip = 4;
  void clear_accesssvr_ip();
  static const int kAccesssvrIpFieldNumber = 4;
  const ::std::string& accesssvr_ip() const;
  void set_accesssvr_ip(const ::std::string& value);
  void set_accesssvr_ip(const char* value);
  void set_accesssvr_ip(const char* value, size_t size);
  ::std::string* mutable_accesssvr_ip();
  ::std::string* release_accesssvr_ip();
  void set_allocated_accesssvr_ip(::std::string* accesssvr_ip);

  // optional uint32 accesssvr_port = 5;
  void clear_accesssvr_port();
  static const int kAccesssvrPortFieldNumber = 5;
  ::google::protobuf::uint32 accesssvr_port() const;
  void set_accesssvr_port(::google::protobuf::uint32 value);

  // optional uint32 accesssvr_sock = 6;
  void clear_accesssvr_sock();
  static const int kAccesssvrSockFieldNumber = 6;
  ::google::protobuf::uint32 accesssvr_sock() const;
  void set_accesssvr_sock(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.AppRepetitionLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr device_token_;
  ::google::protobuf::uint32 user_type_;
  ::google::protobuf::uint32 accesssvr_port_;
  ::google::protobuf::internal::ArenaStringPtr accesssvr_ip_;
  ::google::protobuf::uint32 accesssvr_sock_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppRepetitionLogin* default_instance_;
};
// -------------------------------------------------------------------

class AppCalleeNotifyReq : public ::google::protobuf::Message {
 public:
  AppCalleeNotifyReq();
  virtual ~AppCalleeNotifyReq();

  AppCalleeNotifyReq(const AppCalleeNotifyReq& from);

  inline AppCalleeNotifyReq& operator=(const AppCalleeNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCalleeNotifyReq& default_instance();

  void Swap(AppCalleeNotifyReq* other);

  // implements Message ----------------------------------------------

  inline AppCalleeNotifyReq* New() const { return New(NULL); }

  AppCalleeNotifyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppCalleeNotifyReq& from);
  void MergeFrom(const AppCalleeNotifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppCalleeNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional string room_address = 2;
  void clear_room_address();
  static const int kRoomAddressFieldNumber = 2;
  const ::std::string& room_address() const;
  void set_room_address(const ::std::string& value);
  void set_room_address(const char* value);
  void set_room_address(const char* value, size_t size);
  ::std::string* mutable_room_address();
  ::std::string* release_room_address();
  void set_allocated_room_address(::std::string* room_address);

  // optional string device_token = 3;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 3;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // optional uint64 callee_id = 4;
  void clear_callee_id();
  static const int kCalleeIdFieldNumber = 4;
  ::google::protobuf::uint64 callee_id() const;
  void set_callee_id(::google::protobuf::uint64 value);

  // optional string source_language = 5;
  void clear_source_language();
  static const int kSourceLanguageFieldNumber = 5;
  const ::std::string& source_language() const;
  void set_source_language(const ::std::string& value);
  void set_source_language(const char* value);
  void set_source_language(const char* value, size_t size);
  ::std::string* mutable_source_language();
  ::std::string* release_source_language();
  void set_allocated_source_language(::std::string* source_language);

  // optional string target_language = 6;
  void clear_target_language();
  static const int kTargetLanguageFieldNumber = 6;
  const ::std::string& target_language() const;
  void set_target_language(const ::std::string& value);
  void set_target_language(const char* value);
  void set_target_language(const char* value, size_t size);
  ::std::string* mutable_target_language();
  ::std::string* release_target_language();
  void set_allocated_target_language(::std::string* target_language);

  // optional string call_mode = 7;
  void clear_call_mode();
  static const int kCallModeFieldNumber = 7;
  const ::std::string& call_mode() const;
  void set_call_mode(const ::std::string& value);
  void set_call_mode(const char* value);
  void set_call_mode(const char* value, size_t size);
  ::std::string* mutable_call_mode();
  ::std::string* release_call_mode();
  void set_allocated_call_mode(::std::string* call_mode);

  // optional string cdr_id = 8;
  void clear_cdr_id();
  static const int kCdrIdFieldNumber = 8;
  const ::std::string& cdr_id() const;
  void set_cdr_id(const ::std::string& value);
  void set_cdr_id(const char* value);
  void set_cdr_id(const char* value, size_t size);
  ::std::string* mutable_cdr_id();
  ::std::string* release_cdr_id();
  void set_allocated_cdr_id(::std::string* cdr_id);

  // @@protoc_insertion_point(class_scope:yespo.AppCalleeNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr room_address_;
  ::google::protobuf::internal::ArenaStringPtr device_token_;
  ::google::protobuf::uint64 callee_id_;
  ::google::protobuf::internal::ArenaStringPtr source_language_;
  ::google::protobuf::internal::ArenaStringPtr target_language_;
  ::google::protobuf::internal::ArenaStringPtr call_mode_;
  ::google::protobuf::internal::ArenaStringPtr cdr_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppCalleeNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class AppCallReadyReq : public ::google::protobuf::Message {
 public:
  AppCallReadyReq();
  virtual ~AppCallReadyReq();

  AppCallReadyReq(const AppCallReadyReq& from);

  inline AppCallReadyReq& operator=(const AppCallReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCallReadyReq& default_instance();

  void Swap(AppCallReadyReq* other);

  // implements Message ----------------------------------------------

  inline AppCallReadyReq* New() const { return New(NULL); }

  AppCallReadyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppCallReadyReq& from);
  void MergeFrom(const AppCallReadyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppCallReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:yespo.AppCallReadyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppCallReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class AppPhotoMsgReq : public ::google::protobuf::Message {
 public:
  AppPhotoMsgReq();
  virtual ~AppPhotoMsgReq();

  AppPhotoMsgReq(const AppPhotoMsgReq& from);

  inline AppPhotoMsgReq& operator=(const AppPhotoMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppPhotoMsgReq& default_instance();

  void Swap(AppPhotoMsgReq* other);

  // implements Message ----------------------------------------------

  inline AppPhotoMsgReq* New() const { return New(NULL); }

  AppPhotoMsgReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppPhotoMsgReq& from);
  void MergeFrom(const AppPhotoMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppPhotoMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:yespo.AppPhotoMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppPhotoMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class AppCallStatusReq : public ::google::protobuf::Message {
 public:
  AppCallStatusReq();
  virtual ~AppCallStatusReq();

  AppCallStatusReq(const AppCallStatusReq& from);

  inline AppCallStatusReq& operator=(const AppCallStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCallStatusReq& default_instance();

  void Swap(AppCallStatusReq* other);

  // implements Message ----------------------------------------------

  inline AppCallStatusReq* New() const { return New(NULL); }

  AppCallStatusReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppCallStatusReq& from);
  void MergeFrom(const AppCallStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppCallStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 call_status = 2;
  void clear_call_status();
  static const int kCallStatusFieldNumber = 2;
  ::google::protobuf::uint32 call_status() const;
  void set_call_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.AppCallStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 call_status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppCallStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class AppCallTerminateReq : public ::google::protobuf::Message {
 public:
  AppCallTerminateReq();
  virtual ~AppCallTerminateReq();

  AppCallTerminateReq(const AppCallTerminateReq& from);

  inline AppCallTerminateReq& operator=(const AppCallTerminateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCallTerminateReq& default_instance();

  void Swap(AppCallTerminateReq* other);

  // implements Message ----------------------------------------------

  inline AppCallTerminateReq* New() const { return New(NULL); }

  AppCallTerminateReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppCallTerminateReq& from);
  void MergeFrom(const AppCallTerminateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppCallTerminateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:yespo.AppCallTerminateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppCallTerminateReq* default_instance_;
};
// -------------------------------------------------------------------

class AppVideoSendReq : public ::google::protobuf::Message {
 public:
  AppVideoSendReq();
  virtual ~AppVideoSendReq();

  AppVideoSendReq(const AppVideoSendReq& from);

  inline AppVideoSendReq& operator=(const AppVideoSendReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppVideoSendReq& default_instance();

  void Swap(AppVideoSendReq* other);

  // implements Message ----------------------------------------------

  inline AppVideoSendReq* New() const { return New(NULL); }

  AppVideoSendReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppVideoSendReq& from);
  void MergeFrom(const AppVideoSendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppVideoSendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 2;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 2;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // optional uint32 video_status = 3;
  void clear_video_status();
  static const int kVideoStatusFieldNumber = 3;
  ::google::protobuf::uint32 video_status() const;
  void set_video_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.AppVideoSendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 partner_id_;
  ::google::protobuf::uint32 video_status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppVideoSendReq* default_instance_;
};
// -------------------------------------------------------------------

class AppVideoRecvReq : public ::google::protobuf::Message {
 public:
  AppVideoRecvReq();
  virtual ~AppVideoRecvReq();

  AppVideoRecvReq(const AppVideoRecvReq& from);

  inline AppVideoRecvReq& operator=(const AppVideoRecvReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppVideoRecvReq& default_instance();

  void Swap(AppVideoRecvReq* other);

  // implements Message ----------------------------------------------

  inline AppVideoRecvReq* New() const { return New(NULL); }

  AppVideoRecvReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppVideoRecvReq& from);
  void MergeFrom(const AppVideoRecvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppVideoRecvReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 2;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 2;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // optional uint32 result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.AppVideoRecvReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 partner_id_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppVideoRecvReq* default_instance_;
};
// -------------------------------------------------------------------

class AccessSvrHeartbeatFailReq : public ::google::protobuf::Message {
 public:
  AccessSvrHeartbeatFailReq();
  virtual ~AccessSvrHeartbeatFailReq();

  AccessSvrHeartbeatFailReq(const AccessSvrHeartbeatFailReq& from);

  inline AccessSvrHeartbeatFailReq& operator=(const AccessSvrHeartbeatFailReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessSvrHeartbeatFailReq& default_instance();

  void Swap(AccessSvrHeartbeatFailReq* other);

  // implements Message ----------------------------------------------

  inline AccessSvrHeartbeatFailReq* New() const { return New(NULL); }

  AccessSvrHeartbeatFailReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccessSvrHeartbeatFailReq& from);
  void MergeFrom(const AccessSvrHeartbeatFailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccessSvrHeartbeatFailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 socket = 2;
  void clear_socket();
  static const int kSocketFieldNumber = 2;
  ::google::protobuf::uint32 socket() const;
  void set_socket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.AccessSvrHeartbeatFailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 socket_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AccessSvrHeartbeatFailReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginSvrLoginReq : public ::google::protobuf::Message {
 public:
  LoginSvrLoginReq();
  virtual ~LoginSvrLoginReq();

  LoginSvrLoginReq(const LoginSvrLoginReq& from);

  inline LoginSvrLoginReq& operator=(const LoginSvrLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSvrLoginReq& default_instance();

  void Swap(LoginSvrLoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginSvrLoginReq* New() const { return New(NULL); }

  LoginSvrLoginReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSvrLoginReq& from);
  void MergeFrom(const LoginSvrLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginSvrLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 user_type = 2;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 2;
  ::google::protobuf::uint32 user_type() const;
  void set_user_type(::google::protobuf::uint32 value);

  // optional string token = 3;
  void clear_token();
  static const int kTokenFieldNumber = 3;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string device_token = 4;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 4;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // optional string accesssvr_ip = 5;
  void clear_accesssvr_ip();
  static const int kAccesssvrIpFieldNumber = 5;
  const ::std::string& accesssvr_ip() const;
  void set_accesssvr_ip(const ::std::string& value);
  void set_accesssvr_ip(const char* value);
  void set_accesssvr_ip(const char* value, size_t size);
  ::std::string* mutable_accesssvr_ip();
  ::std::string* release_accesssvr_ip();
  void set_allocated_accesssvr_ip(::std::string* accesssvr_ip);

  // optional uint32 accesssvr_port = 6;
  void clear_accesssvr_port();
  static const int kAccesssvrPortFieldNumber = 6;
  ::google::protobuf::uint32 accesssvr_port() const;
  void set_accesssvr_port(::google::protobuf::uint32 value);

  // optional uint32 accesssvr_sock = 7;
  void clear_accesssvr_sock();
  static const int kAccesssvrSockFieldNumber = 7;
  ::google::protobuf::uint32 accesssvr_sock() const;
  void set_accesssvr_sock(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.LoginSvrLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr device_token_;
  ::google::protobuf::uint32 user_type_;
  ::google::protobuf::uint32 accesssvr_port_;
  ::google::protobuf::internal::ArenaStringPtr accesssvr_ip_;
  ::google::protobuf::uint32 accesssvr_sock_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginSvrLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginSvrLoginRsp : public ::google::protobuf::Message {
 public:
  LoginSvrLoginRsp();
  virtual ~LoginSvrLoginRsp();

  LoginSvrLoginRsp(const LoginSvrLoginRsp& from);

  inline LoginSvrLoginRsp& operator=(const LoginSvrLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSvrLoginRsp& default_instance();

  void Swap(LoginSvrLoginRsp* other);

  // implements Message ----------------------------------------------

  inline LoginSvrLoginRsp* New() const { return New(NULL); }

  LoginSvrLoginRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSvrLoginRsp& from);
  void MergeFrom(const LoginSvrLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginSvrLoginRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.LoginSvrLoginRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginSvrLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class LoginSvrLogoutReq : public ::google::protobuf::Message {
 public:
  LoginSvrLogoutReq();
  virtual ~LoginSvrLogoutReq();

  LoginSvrLogoutReq(const LoginSvrLogoutReq& from);

  inline LoginSvrLogoutReq& operator=(const LoginSvrLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSvrLogoutReq& default_instance();

  void Swap(LoginSvrLogoutReq* other);

  // implements Message ----------------------------------------------

  inline LoginSvrLogoutReq* New() const { return New(NULL); }

  LoginSvrLogoutReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSvrLogoutReq& from);
  void MergeFrom(const LoginSvrLogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginSvrLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:yespo.LoginSvrLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginSvrLogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginSvrLogoutRsp : public ::google::protobuf::Message {
 public:
  LoginSvrLogoutRsp();
  virtual ~LoginSvrLogoutRsp();

  LoginSvrLogoutRsp(const LoginSvrLogoutRsp& from);

  inline LoginSvrLogoutRsp& operator=(const LoginSvrLogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSvrLogoutRsp& default_instance();

  void Swap(LoginSvrLogoutRsp* other);

  // implements Message ----------------------------------------------

  inline LoginSvrLogoutRsp* New() const { return New(NULL); }

  LoginSvrLogoutRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSvrLogoutRsp& from);
  void MergeFrom(const LoginSvrLogoutRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginSvrLogoutRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.LoginSvrLogoutRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginSvrLogoutRsp* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrAdduserReq : public ::google::protobuf::Message {
 public:
  StatusSvrAdduserReq();
  virtual ~StatusSvrAdduserReq();

  StatusSvrAdduserReq(const StatusSvrAdduserReq& from);

  inline StatusSvrAdduserReq& operator=(const StatusSvrAdduserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrAdduserReq& default_instance();

  void Swap(StatusSvrAdduserReq* other);

  // implements Message ----------------------------------------------

  inline StatusSvrAdduserReq* New() const { return New(NULL); }

  StatusSvrAdduserReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrAdduserReq& from);
  void MergeFrom(const StatusSvrAdduserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrAdduserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 user_type = 2;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 2;
  ::google::protobuf::uint32 user_type() const;
  void set_user_type(::google::protobuf::uint32 value);

  // optional string device_token = 3;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 3;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // optional string accesssvr_ip = 4;
  void clear_accesssvr_ip();
  static const int kAccesssvrIpFieldNumber = 4;
  const ::std::string& accesssvr_ip() const;
  void set_accesssvr_ip(const ::std::string& value);
  void set_accesssvr_ip(const char* value);
  void set_accesssvr_ip(const char* value, size_t size);
  ::std::string* mutable_accesssvr_ip();
  ::std::string* release_accesssvr_ip();
  void set_allocated_accesssvr_ip(::std::string* accesssvr_ip);

  // optional uint32 accesssvr_port = 5;
  void clear_accesssvr_port();
  static const int kAccesssvrPortFieldNumber = 5;
  ::google::protobuf::uint32 accesssvr_port() const;
  void set_accesssvr_port(::google::protobuf::uint32 value);

  // optional uint32 socket = 6;
  void clear_socket();
  static const int kSocketFieldNumber = 6;
  ::google::protobuf::uint32 socket() const;
  void set_socket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrAdduserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr device_token_;
  ::google::protobuf::uint32 user_type_;
  ::google::protobuf::uint32 accesssvr_port_;
  ::google::protobuf::internal::ArenaStringPtr accesssvr_ip_;
  ::google::protobuf::uint32 socket_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrAdduserReq* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrAdduserRsp : public ::google::protobuf::Message {
 public:
  StatusSvrAdduserRsp();
  virtual ~StatusSvrAdduserRsp();

  StatusSvrAdduserRsp(const StatusSvrAdduserRsp& from);

  inline StatusSvrAdduserRsp& operator=(const StatusSvrAdduserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrAdduserRsp& default_instance();

  void Swap(StatusSvrAdduserRsp* other);

  // implements Message ----------------------------------------------

  inline StatusSvrAdduserRsp* New() const { return New(NULL); }

  StatusSvrAdduserRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrAdduserRsp& from);
  void MergeFrom(const StatusSvrAdduserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrAdduserRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // optional uint64 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 user_type = 3;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 3;
  ::google::protobuf::uint32 user_type() const;
  void set_user_type(::google::protobuf::uint32 value);

  // optional string device_token = 4;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 4;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // optional string accesssvr_ip = 5;
  void clear_accesssvr_ip();
  static const int kAccesssvrIpFieldNumber = 5;
  const ::std::string& accesssvr_ip() const;
  void set_accesssvr_ip(const ::std::string& value);
  void set_accesssvr_ip(const char* value);
  void set_accesssvr_ip(const char* value, size_t size);
  ::std::string* mutable_accesssvr_ip();
  ::std::string* release_accesssvr_ip();
  void set_allocated_accesssvr_ip(::std::string* accesssvr_ip);

  // optional uint32 accesssvr_port = 6;
  void clear_accesssvr_port();
  static const int kAccesssvrPortFieldNumber = 6;
  ::google::protobuf::uint32 accesssvr_port() const;
  void set_accesssvr_port(::google::protobuf::uint32 value);

  // optional uint32 socket = 7;
  void clear_socket();
  static const int kSocketFieldNumber = 7;
  ::google::protobuf::uint32 socket() const;
  void set_socket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrAdduserRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr device_token_;
  ::google::protobuf::uint32 user_type_;
  ::google::protobuf::uint32 accesssvr_port_;
  ::google::protobuf::internal::ArenaStringPtr accesssvr_ip_;
  ::google::protobuf::uint32 socket_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrAdduserRsp* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrDeluserReq : public ::google::protobuf::Message {
 public:
  StatusSvrDeluserReq();
  virtual ~StatusSvrDeluserReq();

  StatusSvrDeluserReq(const StatusSvrDeluserReq& from);

  inline StatusSvrDeluserReq& operator=(const StatusSvrDeluserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrDeluserReq& default_instance();

  void Swap(StatusSvrDeluserReq* other);

  // implements Message ----------------------------------------------

  inline StatusSvrDeluserReq* New() const { return New(NULL); }

  StatusSvrDeluserReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrDeluserReq& from);
  void MergeFrom(const StatusSvrDeluserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrDeluserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 socket = 3;
  void clear_socket();
  static const int kSocketFieldNumber = 3;
  ::google::protobuf::int32 socket() const;
  void set_socket(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrDeluserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 socket_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrDeluserReq* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrDeluserRsp : public ::google::protobuf::Message {
 public:
  StatusSvrDeluserRsp();
  virtual ~StatusSvrDeluserRsp();

  StatusSvrDeluserRsp(const StatusSvrDeluserRsp& from);

  inline StatusSvrDeluserRsp& operator=(const StatusSvrDeluserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrDeluserRsp& default_instance();

  void Swap(StatusSvrDeluserRsp* other);

  // implements Message ----------------------------------------------

  inline StatusSvrDeluserRsp* New() const { return New(NULL); }

  StatusSvrDeluserRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrDeluserRsp& from);
  void MergeFrom(const StatusSvrDeluserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrDeluserRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrDeluserRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrDeluserRsp* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrStatusQueryReq : public ::google::protobuf::Message {
 public:
  StatusSvrStatusQueryReq();
  virtual ~StatusSvrStatusQueryReq();

  StatusSvrStatusQueryReq(const StatusSvrStatusQueryReq& from);

  inline StatusSvrStatusQueryReq& operator=(const StatusSvrStatusQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrStatusQueryReq& default_instance();

  void Swap(StatusSvrStatusQueryReq* other);

  // implements Message ----------------------------------------------

  inline StatusSvrStatusQueryReq* New() const { return New(NULL); }

  StatusSvrStatusQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrStatusQueryReq& from);
  void MergeFrom(const StatusSvrStatusQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrStatusQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 user_id = 1;
  int user_id_size() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id(int index) const;
  void set_user_id(int index, ::google::protobuf::uint64 value);
  void add_user_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrStatusQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;
  mutable int _user_id_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrStatusQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrStatusItem : public ::google::protobuf::Message {
 public:
  StatusSvrStatusItem();
  virtual ~StatusSvrStatusItem();

  StatusSvrStatusItem(const StatusSvrStatusItem& from);

  inline StatusSvrStatusItem& operator=(const StatusSvrStatusItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrStatusItem& default_instance();

  void Swap(StatusSvrStatusItem* other);

  // implements Message ----------------------------------------------

  inline StatusSvrStatusItem* New() const { return New(NULL); }

  StatusSvrStatusItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrStatusItem& from);
  void MergeFrom(const StatusSvrStatusItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrStatusItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional int32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrStatusItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrStatusItem* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrStatusQueryRsp : public ::google::protobuf::Message {
 public:
  StatusSvrStatusQueryRsp();
  virtual ~StatusSvrStatusQueryRsp();

  StatusSvrStatusQueryRsp(const StatusSvrStatusQueryRsp& from);

  inline StatusSvrStatusQueryRsp& operator=(const StatusSvrStatusQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrStatusQueryRsp& default_instance();

  void Swap(StatusSvrStatusQueryRsp* other);

  // implements Message ----------------------------------------------

  inline StatusSvrStatusQueryRsp* New() const { return New(NULL); }

  StatusSvrStatusQueryRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrStatusQueryRsp& from);
  void MergeFrom(const StatusSvrStatusQueryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrStatusQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // repeated .yespo.StatusSvrStatusItem status_item = 2;
  int status_item_size() const;
  void clear_status_item();
  static const int kStatusItemFieldNumber = 2;
  const ::yespo::StatusSvrStatusItem& status_item(int index) const;
  ::yespo::StatusSvrStatusItem* mutable_status_item(int index);
  ::yespo::StatusSvrStatusItem* add_status_item();
  ::google::protobuf::RepeatedPtrField< ::yespo::StatusSvrStatusItem >*
      mutable_status_item();
  const ::google::protobuf::RepeatedPtrField< ::yespo::StatusSvrStatusItem >&
      status_item() const;

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrStatusQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedPtrField< ::yespo::StatusSvrStatusItem > status_item_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrStatusQueryRsp* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrUserInfoReq : public ::google::protobuf::Message {
 public:
  StatusSvrUserInfoReq();
  virtual ~StatusSvrUserInfoReq();

  StatusSvrUserInfoReq(const StatusSvrUserInfoReq& from);

  inline StatusSvrUserInfoReq& operator=(const StatusSvrUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrUserInfoReq& default_instance();

  void Swap(StatusSvrUserInfoReq* other);

  // implements Message ----------------------------------------------

  inline StatusSvrUserInfoReq* New() const { return New(NULL); }

  StatusSvrUserInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrUserInfoReq& from);
  void MergeFrom(const StatusSvrUserInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrUserInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrUserInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrUserInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class StatusSvrUserInfoRsp : public ::google::protobuf::Message {
 public:
  StatusSvrUserInfoRsp();
  virtual ~StatusSvrUserInfoRsp();

  StatusSvrUserInfoRsp(const StatusSvrUserInfoRsp& from);

  inline StatusSvrUserInfoRsp& operator=(const StatusSvrUserInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusSvrUserInfoRsp& default_instance();

  void Swap(StatusSvrUserInfoRsp* other);

  // implements Message ----------------------------------------------

  inline StatusSvrUserInfoRsp* New() const { return New(NULL); }

  StatusSvrUserInfoRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusSvrUserInfoRsp& from);
  void MergeFrom(const StatusSvrUserInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusSvrUserInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // optional uint64 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 user_type = 3;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 3;
  ::google::protobuf::uint32 user_type() const;
  void set_user_type(::google::protobuf::uint32 value);

  // optional string device_token = 4;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 4;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // optional string accesssvr_ip = 5;
  void clear_accesssvr_ip();
  static const int kAccesssvrIpFieldNumber = 5;
  const ::std::string& accesssvr_ip() const;
  void set_accesssvr_ip(const ::std::string& value);
  void set_accesssvr_ip(const char* value);
  void set_accesssvr_ip(const char* value, size_t size);
  ::std::string* mutable_accesssvr_ip();
  ::std::string* release_accesssvr_ip();
  void set_allocated_accesssvr_ip(::std::string* accesssvr_ip);

  // optional uint32 accesssvr_port = 6;
  void clear_accesssvr_port();
  static const int kAccesssvrPortFieldNumber = 6;
  ::google::protobuf::uint32 accesssvr_port() const;
  void set_accesssvr_port(::google::protobuf::uint32 value);

  // optional uint32 socket = 7;
  void clear_socket();
  static const int kSocketFieldNumber = 7;
  ::google::protobuf::uint32 socket() const;
  void set_socket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.StatusSvrUserInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr device_token_;
  ::google::protobuf::uint32 user_type_;
  ::google::protobuf::uint32 accesssvr_port_;
  ::google::protobuf::internal::ArenaStringPtr accesssvr_ip_;
  ::google::protobuf::uint32 socket_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatusSvrUserInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrDistributeReq : public ::google::protobuf::Message {
 public:
  RoomsvrDistributeReq();
  virtual ~RoomsvrDistributeReq();

  RoomsvrDistributeReq(const RoomsvrDistributeReq& from);

  inline RoomsvrDistributeReq& operator=(const RoomsvrDistributeReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrDistributeReq& default_instance();

  void Swap(RoomsvrDistributeReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrDistributeReq* New() const { return New(NULL); }

  RoomsvrDistributeReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrDistributeReq& from);
  void MergeFrom(const RoomsvrDistributeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrDistributeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 2;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 2;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // optional uint64 callee_id = 3;
  void clear_callee_id();
  static const int kCalleeIdFieldNumber = 3;
  ::google::protobuf::uint64 callee_id() const;
  void set_callee_id(::google::protobuf::uint64 value);

  // optional string source_language = 4;
  void clear_source_language();
  static const int kSourceLanguageFieldNumber = 4;
  const ::std::string& source_language() const;
  void set_source_language(const ::std::string& value);
  void set_source_language(const char* value);
  void set_source_language(const char* value, size_t size);
  ::std::string* mutable_source_language();
  ::std::string* release_source_language();
  void set_allocated_source_language(::std::string* source_language);

  // optional string target_language = 5;
  void clear_target_language();
  static const int kTargetLanguageFieldNumber = 5;
  const ::std::string& target_language() const;
  void set_target_language(const ::std::string& value);
  void set_target_language(const char* value);
  void set_target_language(const char* value, size_t size);
  ::std::string* mutable_target_language();
  ::std::string* release_target_language();
  void set_allocated_target_language(::std::string* target_language);

  // optional string call_mode = 6;
  void clear_call_mode();
  static const int kCallModeFieldNumber = 6;
  const ::std::string& call_mode() const;
  void set_call_mode(const ::std::string& value);
  void set_call_mode(const char* value);
  void set_call_mode(const char* value, size_t size);
  ::std::string* mutable_call_mode();
  ::std::string* release_call_mode();
  void set_allocated_call_mode(::std::string* call_mode);

  // optional string call_country = 7;
  void clear_call_country();
  static const int kCallCountryFieldNumber = 7;
  const ::std::string& call_country() const;
  void set_call_country(const ::std::string& value);
  void set_call_country(const char* value);
  void set_call_country(const char* value, size_t size);
  ::std::string* mutable_call_country();
  ::std::string* release_call_country();
  void set_allocated_call_country(::std::string* call_country);

  // optional string country_code = 8;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 8;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // optional string parent_cdr_id = 9;
  void clear_parent_cdr_id();
  static const int kParentCdrIdFieldNumber = 9;
  const ::std::string& parent_cdr_id() const;
  void set_parent_cdr_id(const ::std::string& value);
  void set_parent_cdr_id(const char* value);
  void set_parent_cdr_id(const char* value, size_t size);
  ::std::string* mutable_parent_cdr_id();
  ::std::string* release_parent_cdr_id();
  void set_allocated_parent_cdr_id(::std::string* parent_cdr_id);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrDistributeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 partner_id_;
  ::google::protobuf::uint64 callee_id_;
  ::google::protobuf::internal::ArenaStringPtr source_language_;
  ::google::protobuf::internal::ArenaStringPtr target_language_;
  ::google::protobuf::internal::ArenaStringPtr call_mode_;
  ::google::protobuf::internal::ArenaStringPtr call_country_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr parent_cdr_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrDistributeReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrDistributeRsp : public ::google::protobuf::Message {
 public:
  RoomsvrDistributeRsp();
  virtual ~RoomsvrDistributeRsp();

  RoomsvrDistributeRsp(const RoomsvrDistributeRsp& from);

  inline RoomsvrDistributeRsp& operator=(const RoomsvrDistributeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrDistributeRsp& default_instance();

  void Swap(RoomsvrDistributeRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrDistributeRsp* New() const { return New(NULL); }

  RoomsvrDistributeRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrDistributeRsp& from);
  void MergeFrom(const RoomsvrDistributeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrDistributeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // optional uint64 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional string room_address = 3;
  void clear_room_address();
  static const int kRoomAddressFieldNumber = 3;
  const ::std::string& room_address() const;
  void set_room_address(const ::std::string& value);
  void set_room_address(const char* value);
  void set_room_address(const char* value, size_t size);
  ::std::string* mutable_room_address();
  ::std::string* release_room_address();
  void set_allocated_room_address(::std::string* room_address);

  // optional string cdr_id = 4;
  void clear_cdr_id();
  static const int kCdrIdFieldNumber = 4;
  const ::std::string& cdr_id() const;
  void set_cdr_id(const ::std::string& value);
  void set_cdr_id(const char* value);
  void set_cdr_id(const char* value, size_t size);
  ::std::string* mutable_cdr_id();
  ::std::string* release_cdr_id();
  void set_allocated_cdr_id(::std::string* cdr_id);

  // optional string record_path = 5;
  void clear_record_path();
  static const int kRecordPathFieldNumber = 5;
  const ::std::string& record_path() const;
  void set_record_path(const ::std::string& value);
  void set_record_path(const char* value);
  void set_record_path(const char* value, size_t size);
  ::std::string* mutable_record_path();
  ::std::string* release_record_path();
  void set_allocated_record_path(::std::string* record_path);

  // optional string parent_cdr_id = 6;
  void clear_parent_cdr_id();
  static const int kParentCdrIdFieldNumber = 6;
  const ::std::string& parent_cdr_id() const;
  void set_parent_cdr_id(const ::std::string& value);
  void set_parent_cdr_id(const char* value);
  void set_parent_cdr_id(const char* value, size_t size);
  ::std::string* mutable_parent_cdr_id();
  ::std::string* release_parent_cdr_id();
  void set_allocated_parent_cdr_id(::std::string* parent_cdr_id);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrDistributeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr room_address_;
  ::google::protobuf::internal::ArenaStringPtr cdr_id_;
  ::google::protobuf::internal::ArenaStringPtr record_path_;
  ::google::protobuf::internal::ArenaStringPtr parent_cdr_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrDistributeRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrCallCancelReq : public ::google::protobuf::Message {
 public:
  RoomsvrCallCancelReq();
  virtual ~RoomsvrCallCancelReq();

  RoomsvrCallCancelReq(const RoomsvrCallCancelReq& from);

  inline RoomsvrCallCancelReq& operator=(const RoomsvrCallCancelReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrCallCancelReq& default_instance();

  void Swap(RoomsvrCallCancelReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrCallCancelReq* New() const { return New(NULL); }

  RoomsvrCallCancelReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrCallCancelReq& from);
  void MergeFrom(const RoomsvrCallCancelReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrCallCancelReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 2;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 2;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrCallCancelReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 partner_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrCallCancelReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrCallCancelRsp : public ::google::protobuf::Message {
 public:
  RoomsvrCallCancelRsp();
  virtual ~RoomsvrCallCancelRsp();

  RoomsvrCallCancelRsp(const RoomsvrCallCancelRsp& from);

  inline RoomsvrCallCancelRsp& operator=(const RoomsvrCallCancelRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrCallCancelRsp& default_instance();

  void Swap(RoomsvrCallCancelRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrCallCancelRsp* New() const { return New(NULL); }

  RoomsvrCallCancelRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrCallCancelRsp& from);
  void MergeFrom(const RoomsvrCallCancelRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrCallCancelRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrCallCancelRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrCallCancelRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrPartnerStatusReq : public ::google::protobuf::Message {
 public:
  RoomsvrPartnerStatusReq();
  virtual ~RoomsvrPartnerStatusReq();

  RoomsvrPartnerStatusReq(const RoomsvrPartnerStatusReq& from);

  inline RoomsvrPartnerStatusReq& operator=(const RoomsvrPartnerStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrPartnerStatusReq& default_instance();

  void Swap(RoomsvrPartnerStatusReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrPartnerStatusReq* New() const { return New(NULL); }

  RoomsvrPartnerStatusReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrPartnerStatusReq& from);
  void MergeFrom(const RoomsvrPartnerStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrPartnerStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // repeated uint64 partner_id = 2;
  int partner_id_size() const;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 2;
  ::google::protobuf::uint64 partner_id(int index) const;
  void set_partner_id(int index, ::google::protobuf::uint64 value);
  void add_partner_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      partner_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_partner_id();

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrPartnerStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > partner_id_;
  mutable int _partner_id_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrPartnerStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrPartnerStatusItem : public ::google::protobuf::Message {
 public:
  RoomsvrPartnerStatusItem();
  virtual ~RoomsvrPartnerStatusItem();

  RoomsvrPartnerStatusItem(const RoomsvrPartnerStatusItem& from);

  inline RoomsvrPartnerStatusItem& operator=(const RoomsvrPartnerStatusItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrPartnerStatusItem& default_instance();

  void Swap(RoomsvrPartnerStatusItem* other);

  // implements Message ----------------------------------------------

  inline RoomsvrPartnerStatusItem* New() const { return New(NULL); }

  RoomsvrPartnerStatusItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrPartnerStatusItem& from);
  void MergeFrom(const RoomsvrPartnerStatusItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrPartnerStatusItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 partner_id = 1;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 1;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // optional int32 online_status = 2;
  void clear_online_status();
  static const int kOnlineStatusFieldNumber = 2;
  ::google::protobuf::int32 online_status() const;
  void set_online_status(::google::protobuf::int32 value);

  // optional int32 call_status = 3;
  void clear_call_status();
  static const int kCallStatusFieldNumber = 3;
  ::google::protobuf::int32 call_status() const;
  void set_call_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrPartnerStatusItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 partner_id_;
  ::google::protobuf::int32 online_status_;
  ::google::protobuf::int32 call_status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrPartnerStatusItem* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrPartnerStatusRsp : public ::google::protobuf::Message {
 public:
  RoomsvrPartnerStatusRsp();
  virtual ~RoomsvrPartnerStatusRsp();

  RoomsvrPartnerStatusRsp(const RoomsvrPartnerStatusRsp& from);

  inline RoomsvrPartnerStatusRsp& operator=(const RoomsvrPartnerStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrPartnerStatusRsp& default_instance();

  void Swap(RoomsvrPartnerStatusRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrPartnerStatusRsp* New() const { return New(NULL); }

  RoomsvrPartnerStatusRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrPartnerStatusRsp& from);
  void MergeFrom(const RoomsvrPartnerStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrPartnerStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // optional uint64 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // repeated .yespo.RoomsvrPartnerStatusItem status_item = 3;
  int status_item_size() const;
  void clear_status_item();
  static const int kStatusItemFieldNumber = 3;
  const ::yespo::RoomsvrPartnerStatusItem& status_item(int index) const;
  ::yespo::RoomsvrPartnerStatusItem* mutable_status_item(int index);
  ::yespo::RoomsvrPartnerStatusItem* add_status_item();
  ::google::protobuf::RepeatedPtrField< ::yespo::RoomsvrPartnerStatusItem >*
      mutable_status_item();
  const ::google::protobuf::RepeatedPtrField< ::yespo::RoomsvrPartnerStatusItem >&
      status_item() const;

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrPartnerStatusRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::yespo::RoomsvrPartnerStatusItem > status_item_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrPartnerStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrCheckExpireReq : public ::google::protobuf::Message {
 public:
  RoomsvrCheckExpireReq();
  virtual ~RoomsvrCheckExpireReq();

  RoomsvrCheckExpireReq(const RoomsvrCheckExpireReq& from);

  inline RoomsvrCheckExpireReq& operator=(const RoomsvrCheckExpireReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrCheckExpireReq& default_instance();

  void Swap(RoomsvrCheckExpireReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrCheckExpireReq* New() const { return New(NULL); }

  RoomsvrCheckExpireReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrCheckExpireReq& from);
  void MergeFrom(const RoomsvrCheckExpireReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrCheckExpireReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrCheckExpireReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrCheckExpireReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstPeerStatusReq : public ::google::protobuf::Message {
 public:
  RoomsvrAstPeerStatusReq();
  virtual ~RoomsvrAstPeerStatusReq();

  RoomsvrAstPeerStatusReq(const RoomsvrAstPeerStatusReq& from);

  inline RoomsvrAstPeerStatusReq& operator=(const RoomsvrAstPeerStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstPeerStatusReq& default_instance();

  void Swap(RoomsvrAstPeerStatusReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstPeerStatusReq* New() const { return New(NULL); }

  RoomsvrAstPeerStatusReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstPeerStatusReq& from);
  void MergeFrom(const RoomsvrAstPeerStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstPeerStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional int32 peer_status = 2;
  void clear_peer_status();
  static const int kPeerStatusFieldNumber = 2;
  ::google::protobuf::int32 peer_status() const;
  void set_peer_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstPeerStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::int32 peer_status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstPeerStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstPeerStatusRsp : public ::google::protobuf::Message {
 public:
  RoomsvrAstPeerStatusRsp();
  virtual ~RoomsvrAstPeerStatusRsp();

  RoomsvrAstPeerStatusRsp(const RoomsvrAstPeerStatusRsp& from);

  inline RoomsvrAstPeerStatusRsp& operator=(const RoomsvrAstPeerStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstPeerStatusRsp& default_instance();

  void Swap(RoomsvrAstPeerStatusRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstPeerStatusRsp* New() const { return New(NULL); }

  RoomsvrAstPeerStatusRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstPeerStatusRsp& from);
  void MergeFrom(const RoomsvrAstPeerStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstPeerStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstPeerStatusRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstPeerStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstListCallReq : public ::google::protobuf::Message {
 public:
  RoomsvrAstListCallReq();
  virtual ~RoomsvrAstListCallReq();

  RoomsvrAstListCallReq(const RoomsvrAstListCallReq& from);

  inline RoomsvrAstListCallReq& operator=(const RoomsvrAstListCallReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstListCallReq& default_instance();

  void Swap(RoomsvrAstListCallReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstListCallReq* New() const { return New(NULL); }

  RoomsvrAstListCallReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstListCallReq& from);
  void MergeFrom(const RoomsvrAstListCallReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstListCallReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ast_pub_addr = 1;
  void clear_ast_pub_addr();
  static const int kAstPubAddrFieldNumber = 1;
  const ::std::string& ast_pub_addr() const;
  void set_ast_pub_addr(const ::std::string& value);
  void set_ast_pub_addr(const char* value);
  void set_ast_pub_addr(const char* value, size_t size);
  ::std::string* mutable_ast_pub_addr();
  ::std::string* release_ast_pub_addr();
  void set_allocated_ast_pub_addr(::std::string* ast_pub_addr);

  // optional string ast_addr = 2;
  void clear_ast_addr();
  static const int kAstAddrFieldNumber = 2;
  const ::std::string& ast_addr() const;
  void set_ast_addr(const ::std::string& value);
  void set_ast_addr(const char* value);
  void set_ast_addr(const char* value, size_t size);
  ::std::string* mutable_ast_addr();
  ::std::string* release_ast_addr();
  void set_allocated_ast_addr(::std::string* ast_addr);

  // repeated uint64 user_ids = 3;
  int user_ids_size() const;
  void clear_user_ids();
  static const int kUserIdsFieldNumber = 3;
  ::google::protobuf::uint64 user_ids(int index) const;
  void set_user_ids(int index, ::google::protobuf::uint64 value);
  void add_user_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_ids();

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstListCallReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr ast_pub_addr_;
  ::google::protobuf::internal::ArenaStringPtr ast_addr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_ids_;
  mutable int _user_ids_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstListCallReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstListCallRsp : public ::google::protobuf::Message {
 public:
  RoomsvrAstListCallRsp();
  virtual ~RoomsvrAstListCallRsp();

  RoomsvrAstListCallRsp(const RoomsvrAstListCallRsp& from);

  inline RoomsvrAstListCallRsp& operator=(const RoomsvrAstListCallRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstListCallRsp& default_instance();

  void Swap(RoomsvrAstListCallRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstListCallRsp* New() const { return New(NULL); }

  RoomsvrAstListCallRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstListCallRsp& from);
  void MergeFrom(const RoomsvrAstListCallRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstListCallRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstListCallRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstListCallRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstCallStatusReq : public ::google::protobuf::Message {
 public:
  RoomsvrAstCallStatusReq();
  virtual ~RoomsvrAstCallStatusReq();

  RoomsvrAstCallStatusReq(const RoomsvrAstCallStatusReq& from);

  inline RoomsvrAstCallStatusReq& operator=(const RoomsvrAstCallStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstCallStatusReq& default_instance();

  void Swap(RoomsvrAstCallStatusReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstCallStatusReq* New() const { return New(NULL); }

  RoomsvrAstCallStatusReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstCallStatusReq& from);
  void MergeFrom(const RoomsvrAstCallStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstCallStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 ast_call_status = 2;
  void clear_ast_call_status();
  static const int kAstCallStatusFieldNumber = 2;
  ::google::protobuf::uint32 ast_call_status() const;
  void set_ast_call_status(::google::protobuf::uint32 value);

  // optional string cdr_id = 3;
  void clear_cdr_id();
  static const int kCdrIdFieldNumber = 3;
  const ::std::string& cdr_id() const;
  void set_cdr_id(const ::std::string& value);
  void set_cdr_id(const char* value);
  void set_cdr_id(const char* value, size_t size);
  ::std::string* mutable_cdr_id();
  ::std::string* release_cdr_id();
  void set_allocated_cdr_id(::std::string* cdr_id);

  // optional string amisvr_addr = 4;
  void clear_amisvr_addr();
  static const int kAmisvrAddrFieldNumber = 4;
  const ::std::string& amisvr_addr() const;
  void set_amisvr_addr(const ::std::string& value);
  void set_amisvr_addr(const char* value);
  void set_amisvr_addr(const char* value, size_t size);
  ::std::string* mutable_amisvr_addr();
  ::std::string* release_amisvr_addr();
  void set_allocated_amisvr_addr(::std::string* amisvr_addr);

  // optional uint32 amisvr_port = 5;
  void clear_amisvr_port();
  static const int kAmisvrPortFieldNumber = 5;
  ::google::protobuf::uint32 amisvr_port() const;
  void set_amisvr_port(::google::protobuf::uint32 value);

  // optional string caller_channel = 6;
  void clear_caller_channel();
  static const int kCallerChannelFieldNumber = 6;
  const ::std::string& caller_channel() const;
  void set_caller_channel(const ::std::string& value);
  void set_caller_channel(const char* value);
  void set_caller_channel(const char* value, size_t size);
  ::std::string* mutable_caller_channel();
  ::std::string* release_caller_channel();
  void set_allocated_caller_channel(::std::string* caller_channel);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstCallStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr cdr_id_;
  ::google::protobuf::uint32 ast_call_status_;
  ::google::protobuf::uint32 amisvr_port_;
  ::google::protobuf::internal::ArenaStringPtr amisvr_addr_;
  ::google::protobuf::internal::ArenaStringPtr caller_channel_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstCallStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstCallStatusRsp : public ::google::protobuf::Message {
 public:
  RoomsvrAstCallStatusRsp();
  virtual ~RoomsvrAstCallStatusRsp();

  RoomsvrAstCallStatusRsp(const RoomsvrAstCallStatusRsp& from);

  inline RoomsvrAstCallStatusRsp& operator=(const RoomsvrAstCallStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstCallStatusRsp& default_instance();

  void Swap(RoomsvrAstCallStatusRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstCallStatusRsp* New() const { return New(NULL); }

  RoomsvrAstCallStatusRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstCallStatusRsp& from);
  void MergeFrom(const RoomsvrAstCallStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstCallStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstCallStatusRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstCallStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrVideoSendReq : public ::google::protobuf::Message {
 public:
  RoomsvrVideoSendReq();
  virtual ~RoomsvrVideoSendReq();

  RoomsvrVideoSendReq(const RoomsvrVideoSendReq& from);

  inline RoomsvrVideoSendReq& operator=(const RoomsvrVideoSendReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrVideoSendReq& default_instance();

  void Swap(RoomsvrVideoSendReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrVideoSendReq* New() const { return New(NULL); }

  RoomsvrVideoSendReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrVideoSendReq& from);
  void MergeFrom(const RoomsvrVideoSendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrVideoSendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 2;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 2;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // optional uint32 video_status = 3;
  void clear_video_status();
  static const int kVideoStatusFieldNumber = 3;
  ::google::protobuf::uint32 video_status() const;
  void set_video_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrVideoSendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 partner_id_;
  ::google::protobuf::uint32 video_status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrVideoSendReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrVideoSendRsp : public ::google::protobuf::Message {
 public:
  RoomsvrVideoSendRsp();
  virtual ~RoomsvrVideoSendRsp();

  RoomsvrVideoSendRsp(const RoomsvrVideoSendRsp& from);

  inline RoomsvrVideoSendRsp& operator=(const RoomsvrVideoSendRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrVideoSendRsp& default_instance();

  void Swap(RoomsvrVideoSendRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrVideoSendRsp* New() const { return New(NULL); }

  RoomsvrVideoSendRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrVideoSendRsp& from);
  void MergeFrom(const RoomsvrVideoSendRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrVideoSendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrVideoSendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrVideoSendRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrVideoRecvReq : public ::google::protobuf::Message {
 public:
  RoomsvrVideoRecvReq();
  virtual ~RoomsvrVideoRecvReq();

  RoomsvrVideoRecvReq(const RoomsvrVideoRecvReq& from);

  inline RoomsvrVideoRecvReq& operator=(const RoomsvrVideoRecvReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrVideoRecvReq& default_instance();

  void Swap(RoomsvrVideoRecvReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrVideoRecvReq* New() const { return New(NULL); }

  RoomsvrVideoRecvReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrVideoRecvReq& from);
  void MergeFrom(const RoomsvrVideoRecvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrVideoRecvReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 2;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 2;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // optional uint32 result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrVideoRecvReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 partner_id_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrVideoRecvReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrVideoRecvRsp : public ::google::protobuf::Message {
 public:
  RoomsvrVideoRecvRsp();
  virtual ~RoomsvrVideoRecvRsp();

  RoomsvrVideoRecvRsp(const RoomsvrVideoRecvRsp& from);

  inline RoomsvrVideoRecvRsp& operator=(const RoomsvrVideoRecvRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrVideoRecvRsp& default_instance();

  void Swap(RoomsvrVideoRecvRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrVideoRecvRsp* New() const { return New(NULL); }

  RoomsvrVideoRecvRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrVideoRecvRsp& from);
  void MergeFrom(const RoomsvrVideoRecvRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrVideoRecvRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrVideoRecvRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrVideoRecvRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstCallStateReq : public ::google::protobuf::Message {
 public:
  RoomsvrAstCallStateReq();
  virtual ~RoomsvrAstCallStateReq();

  RoomsvrAstCallStateReq(const RoomsvrAstCallStateReq& from);

  inline RoomsvrAstCallStateReq& operator=(const RoomsvrAstCallStateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstCallStateReq& default_instance();

  void Swap(RoomsvrAstCallStateReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstCallStateReq* New() const { return New(NULL); }

  RoomsvrAstCallStateReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstCallStateReq& from);
  void MergeFrom(const RoomsvrAstCallStateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstCallStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role = 1;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  ::google::protobuf::uint32 role() const;
  void set_role(::google::protobuf::uint32 value);

  // optional uint32 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // optional uint32 ringing_time = 3;
  void clear_ringing_time();
  static const int kRingingTimeFieldNumber = 3;
  ::google::protobuf::uint32 ringing_time() const;
  void set_ringing_time(::google::protobuf::uint32 value);

  // optional string cdr_id = 4;
  void clear_cdr_id();
  static const int kCdrIdFieldNumber = 4;
  const ::std::string& cdr_id() const;
  void set_cdr_id(const ::std::string& value);
  void set_cdr_id(const char* value);
  void set_cdr_id(const char* value, size_t size);
  ::std::string* mutable_cdr_id();
  ::std::string* release_cdr_id();
  void set_allocated_cdr_id(::std::string* cdr_id);

  // optional string reason = 5;
  void clear_reason();
  static const int kReasonFieldNumber = 5;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstCallStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 role_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::internal::ArenaStringPtr cdr_id_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::uint32 ringing_time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstCallStateReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrAstCallStateRsp : public ::google::protobuf::Message {
 public:
  RoomsvrAstCallStateRsp();
  virtual ~RoomsvrAstCallStateRsp();

  RoomsvrAstCallStateRsp(const RoomsvrAstCallStateRsp& from);

  inline RoomsvrAstCallStateRsp& operator=(const RoomsvrAstCallStateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrAstCallStateRsp& default_instance();

  void Swap(RoomsvrAstCallStateRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrAstCallStateRsp* New() const { return New(NULL); }

  RoomsvrAstCallStateRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrAstCallStateRsp& from);
  void MergeFrom(const RoomsvrAstCallStateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrAstCallStateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrAstCallStateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrAstCallStateRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrInsufficientReq : public ::google::protobuf::Message {
 public:
  RoomsvrInsufficientReq();
  virtual ~RoomsvrInsufficientReq();

  RoomsvrInsufficientReq(const RoomsvrInsufficientReq& from);

  inline RoomsvrInsufficientReq& operator=(const RoomsvrInsufficientReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrInsufficientReq& default_instance();

  void Swap(RoomsvrInsufficientReq* other);

  // implements Message ----------------------------------------------

  inline RoomsvrInsufficientReq* New() const { return New(NULL); }

  RoomsvrInsufficientReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrInsufficientReq& from);
  void MergeFrom(const RoomsvrInsufficientReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrInsufficientReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cdr_id = 1;
  void clear_cdr_id();
  static const int kCdrIdFieldNumber = 1;
  const ::std::string& cdr_id() const;
  void set_cdr_id(const ::std::string& value);
  void set_cdr_id(const char* value);
  void set_cdr_id(const char* value, size_t size);
  ::std::string* mutable_cdr_id();
  ::std::string* release_cdr_id();
  void set_allocated_cdr_id(::std::string* cdr_id);

  // optional string caller_channel = 2;
  void clear_caller_channel();
  static const int kCallerChannelFieldNumber = 2;
  const ::std::string& caller_channel() const;
  void set_caller_channel(const ::std::string& value);
  void set_caller_channel(const char* value);
  void set_caller_channel(const char* value, size_t size);
  ::std::string* mutable_caller_channel();
  ::std::string* release_caller_channel();
  void set_allocated_caller_channel(::std::string* caller_channel);

  // optional uint64 caller_id = 3;
  void clear_caller_id();
  static const int kCallerIdFieldNumber = 3;
  ::google::protobuf::uint64 caller_id() const;
  void set_caller_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 4;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 4;
  ::google::protobuf::uint64 partner_id() const;
  void set_partner_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrInsufficientReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr cdr_id_;
  ::google::protobuf::internal::ArenaStringPtr caller_channel_;
  ::google::protobuf::uint64 caller_id_;
  ::google::protobuf::uint64 partner_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrInsufficientReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsvrInsufficientRsp : public ::google::protobuf::Message {
 public:
  RoomsvrInsufficientRsp();
  virtual ~RoomsvrInsufficientRsp();

  RoomsvrInsufficientRsp(const RoomsvrInsufficientRsp& from);

  inline RoomsvrInsufficientRsp& operator=(const RoomsvrInsufficientRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsvrInsufficientRsp& default_instance();

  void Swap(RoomsvrInsufficientRsp* other);

  // implements Message ----------------------------------------------

  inline RoomsvrInsufficientRsp* New() const { return New(NULL); }

  RoomsvrInsufficientRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsvrInsufficientRsp& from);
  void MergeFrom(const RoomsvrInsufficientRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsvrInsufficientRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.RoomsvrInsufficientRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoomsvrInsufficientRsp* default_instance_;
};
// -------------------------------------------------------------------

class BillingSvrTimerBillingReq : public ::google::protobuf::Message {
 public:
  BillingSvrTimerBillingReq();
  virtual ~BillingSvrTimerBillingReq();

  BillingSvrTimerBillingReq(const BillingSvrTimerBillingReq& from);

  inline BillingSvrTimerBillingReq& operator=(const BillingSvrTimerBillingReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BillingSvrTimerBillingReq& default_instance();

  void Swap(BillingSvrTimerBillingReq* other);

  // implements Message ----------------------------------------------

  inline BillingSvrTimerBillingReq* New() const { return New(NULL); }

  BillingSvrTimerBillingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BillingSvrTimerBillingReq& from);
  void MergeFrom(const BillingSvrTimerBillingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BillingSvrTimerBillingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:yespo.BillingSvrTimerBillingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BillingSvrTimerBillingReq* default_instance_;
};
// -------------------------------------------------------------------

class BillingSvrStartBillingReq : public ::google::protobuf::Message {
 public:
  BillingSvrStartBillingReq();
  virtual ~BillingSvrStartBillingReq();

  BillingSvrStartBillingReq(const BillingSvrStartBillingReq& from);

  inline BillingSvrStartBillingReq& operator=(const BillingSvrStartBillingReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BillingSvrStartBillingReq& default_instance();

  void Swap(BillingSvrStartBillingReq* other);

  // implements Message ----------------------------------------------

  inline BillingSvrStartBillingReq* New() const { return New(NULL); }

  BillingSvrStartBillingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BillingSvrStartBillingReq& from);
  void MergeFrom(const BillingSvrStartBillingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BillingSvrStartBillingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cdr_id = 1;
  void clear_cdr_id();
  static const int kCdrIdFieldNumber = 1;
  const ::std::string& cdr_id() const;
  void set_cdr_id(const ::std::string& value);
  void set_cdr_id(const char* value);
  void set_cdr_id(const char* value, size_t size);
  ::std::string* mutable_cdr_id();
  ::std::string* release_cdr_id();
  void set_allocated_cdr_id(::std::string* cdr_id);

  // @@protoc_insertion_point(class_scope:yespo.BillingSvrStartBillingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr cdr_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BillingSvrStartBillingReq* default_instance_;
};
// -------------------------------------------------------------------

class BillingSvrStartBillingRsp : public ::google::protobuf::Message {
 public:
  BillingSvrStartBillingRsp();
  virtual ~BillingSvrStartBillingRsp();

  BillingSvrStartBillingRsp(const BillingSvrStartBillingRsp& from);

  inline BillingSvrStartBillingRsp& operator=(const BillingSvrStartBillingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BillingSvrStartBillingRsp& default_instance();

  void Swap(BillingSvrStartBillingRsp* other);

  // implements Message ----------------------------------------------

  inline BillingSvrStartBillingRsp* New() const { return New(NULL); }

  BillingSvrStartBillingRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BillingSvrStartBillingRsp& from);
  void MergeFrom(const BillingSvrStartBillingRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BillingSvrStartBillingRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.BillingSvrStartBillingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BillingSvrStartBillingRsp* default_instance_;
};
// -------------------------------------------------------------------

class BillingSvrFinishBillingReq : public ::google::protobuf::Message {
 public:
  BillingSvrFinishBillingReq();
  virtual ~BillingSvrFinishBillingReq();

  BillingSvrFinishBillingReq(const BillingSvrFinishBillingReq& from);

  inline BillingSvrFinishBillingReq& operator=(const BillingSvrFinishBillingReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BillingSvrFinishBillingReq& default_instance();

  void Swap(BillingSvrFinishBillingReq* other);

  // implements Message ----------------------------------------------

  inline BillingSvrFinishBillingReq* New() const { return New(NULL); }

  BillingSvrFinishBillingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BillingSvrFinishBillingReq& from);
  void MergeFrom(const BillingSvrFinishBillingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BillingSvrFinishBillingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cdr_id = 1;
  void clear_cdr_id();
  static const int kCdrIdFieldNumber = 1;
  const ::std::string& cdr_id() const;
  void set_cdr_id(const ::std::string& value);
  void set_cdr_id(const char* value);
  void set_cdr_id(const char* value, size_t size);
  ::std::string* mutable_cdr_id();
  ::std::string* release_cdr_id();
  void set_allocated_cdr_id(::std::string* cdr_id);

  // @@protoc_insertion_point(class_scope:yespo.BillingSvrFinishBillingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr cdr_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BillingSvrFinishBillingReq* default_instance_;
};
// -------------------------------------------------------------------

class BillingSvrFinishBillingRsp : public ::google::protobuf::Message {
 public:
  BillingSvrFinishBillingRsp();
  virtual ~BillingSvrFinishBillingRsp();

  BillingSvrFinishBillingRsp(const BillingSvrFinishBillingRsp& from);

  inline BillingSvrFinishBillingRsp& operator=(const BillingSvrFinishBillingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BillingSvrFinishBillingRsp& default_instance();

  void Swap(BillingSvrFinishBillingRsp* other);

  // implements Message ----------------------------------------------

  inline BillingSvrFinishBillingRsp* New() const { return New(NULL); }

  BillingSvrFinishBillingRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BillingSvrFinishBillingRsp& from);
  void MergeFrom(const BillingSvrFinishBillingRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BillingSvrFinishBillingRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.BillingSvrFinishBillingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BillingSvrFinishBillingRsp* default_instance_;
};
// -------------------------------------------------------------------

class AmiSvrHangupReq : public ::google::protobuf::Message {
 public:
  AmiSvrHangupReq();
  virtual ~AmiSvrHangupReq();

  AmiSvrHangupReq(const AmiSvrHangupReq& from);

  inline AmiSvrHangupReq& operator=(const AmiSvrHangupReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AmiSvrHangupReq& default_instance();

  void Swap(AmiSvrHangupReq* other);

  // implements Message ----------------------------------------------

  inline AmiSvrHangupReq* New() const { return New(NULL); }

  AmiSvrHangupReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AmiSvrHangupReq& from);
  void MergeFrom(const AmiSvrHangupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AmiSvrHangupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string caller_channel = 1;
  void clear_caller_channel();
  static const int kCallerChannelFieldNumber = 1;
  const ::std::string& caller_channel() const;
  void set_caller_channel(const ::std::string& value);
  void set_caller_channel(const char* value);
  void set_caller_channel(const char* value, size_t size);
  ::std::string* mutable_caller_channel();
  ::std::string* release_caller_channel();
  void set_allocated_caller_channel(::std::string* caller_channel);

  // @@protoc_insertion_point(class_scope:yespo.AmiSvrHangupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr caller_channel_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AmiSvrHangupReq* default_instance_;
};
// -------------------------------------------------------------------

class AmiSvrHangupRsp : public ::google::protobuf::Message {
 public:
  AmiSvrHangupRsp();
  virtual ~AmiSvrHangupRsp();

  AmiSvrHangupRsp(const AmiSvrHangupRsp& from);

  inline AmiSvrHangupRsp& operator=(const AmiSvrHangupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AmiSvrHangupRsp& default_instance();

  void Swap(AmiSvrHangupRsp* other);

  // implements Message ----------------------------------------------

  inline AmiSvrHangupRsp* New() const { return New(NULL); }

  AmiSvrHangupRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AmiSvrHangupRsp& from);
  void MergeFrom(const AmiSvrHangupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AmiSvrHangupRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .yespo.RspMsg rsp_msg = 1;
  bool has_rsp_msg() const;
  void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  const ::yespo::RspMsg& rsp_msg() const;
  ::yespo::RspMsg* mutable_rsp_msg();
  ::yespo::RspMsg* release_rsp_msg();
  void set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:yespo.AmiSvrHangupRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::yespo::RspMsg* rsp_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_yespo_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_yespo_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AmiSvrHangupRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserAgent

// optional string os_type = 1;
inline void UserAgent::clear_os_type() {
  os_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserAgent::os_type() const {
  // @@protoc_insertion_point(field_get:yespo.UserAgent.os_type)
  return os_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_os_type(const ::std::string& value) {
  
  os_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.UserAgent.os_type)
}
inline void UserAgent::set_os_type(const char* value) {
  
  os_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.UserAgent.os_type)
}
inline void UserAgent::set_os_type(const char* value, size_t size) {
  
  os_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.UserAgent.os_type)
}
inline ::std::string* UserAgent::mutable_os_type() {
  
  // @@protoc_insertion_point(field_mutable:yespo.UserAgent.os_type)
  return os_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserAgent::release_os_type() {
  
  return os_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_allocated_os_type(::std::string* os_type) {
  if (os_type != NULL) {
    
  } else {
    
  }
  os_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_type);
  // @@protoc_insertion_point(field_set_allocated:yespo.UserAgent.os_type)
}

// optional string os_ver = 2;
inline void UserAgent::clear_os_ver() {
  os_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserAgent::os_ver() const {
  // @@protoc_insertion_point(field_get:yespo.UserAgent.os_ver)
  return os_ver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_os_ver(const ::std::string& value) {
  
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.UserAgent.os_ver)
}
inline void UserAgent::set_os_ver(const char* value) {
  
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.UserAgent.os_ver)
}
inline void UserAgent::set_os_ver(const char* value, size_t size) {
  
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.UserAgent.os_ver)
}
inline ::std::string* UserAgent::mutable_os_ver() {
  
  // @@protoc_insertion_point(field_mutable:yespo.UserAgent.os_ver)
  return os_ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserAgent::release_os_ver() {
  
  return os_ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_allocated_os_ver(::std::string* os_ver) {
  if (os_ver != NULL) {
    
  } else {
    
  }
  os_ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_ver);
  // @@protoc_insertion_point(field_set_allocated:yespo.UserAgent.os_ver)
}

// optional string model = 3;
inline void UserAgent::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserAgent::model() const {
  // @@protoc_insertion_point(field_get:yespo.UserAgent.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.UserAgent.model)
}
inline void UserAgent::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.UserAgent.model)
}
inline void UserAgent::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.UserAgent.model)
}
inline ::std::string* UserAgent::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:yespo.UserAgent.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserAgent::release_model() {
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:yespo.UserAgent.model)
}

// optional string client_ver = 4;
inline void UserAgent::clear_client_ver() {
  client_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserAgent::client_ver() const {
  // @@protoc_insertion_point(field_get:yespo.UserAgent.client_ver)
  return client_ver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_client_ver(const ::std::string& value) {
  
  client_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.UserAgent.client_ver)
}
inline void UserAgent::set_client_ver(const char* value) {
  
  client_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.UserAgent.client_ver)
}
inline void UserAgent::set_client_ver(const char* value, size_t size) {
  
  client_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.UserAgent.client_ver)
}
inline ::std::string* UserAgent::mutable_client_ver() {
  
  // @@protoc_insertion_point(field_mutable:yespo.UserAgent.client_ver)
  return client_ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserAgent::release_client_ver() {
  
  return client_ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_allocated_client_ver(::std::string* client_ver) {
  if (client_ver != NULL) {
    
  } else {
    
  }
  client_ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_ver);
  // @@protoc_insertion_point(field_set_allocated:yespo.UserAgent.client_ver)
}

// optional string carrier_operator = 5;
inline void UserAgent::clear_carrier_operator() {
  carrier_operator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserAgent::carrier_operator() const {
  // @@protoc_insertion_point(field_get:yespo.UserAgent.carrier_operator)
  return carrier_operator_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_carrier_operator(const ::std::string& value) {
  
  carrier_operator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.UserAgent.carrier_operator)
}
inline void UserAgent::set_carrier_operator(const char* value) {
  
  carrier_operator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.UserAgent.carrier_operator)
}
inline void UserAgent::set_carrier_operator(const char* value, size_t size) {
  
  carrier_operator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.UserAgent.carrier_operator)
}
inline ::std::string* UserAgent::mutable_carrier_operator() {
  
  // @@protoc_insertion_point(field_mutable:yespo.UserAgent.carrier_operator)
  return carrier_operator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserAgent::release_carrier_operator() {
  
  return carrier_operator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAgent::set_allocated_carrier_operator(::std::string* carrier_operator) {
  if (carrier_operator != NULL) {
    
  } else {
    
  }
  carrier_operator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carrier_operator);
  // @@protoc_insertion_point(field_set_allocated:yespo.UserAgent.carrier_operator)
}

// -------------------------------------------------------------------

// Header

// optional int32 msg_type = 1;
inline void Header::clear_msg_type() {
  msg_type_ = 0;
}
inline ::google::protobuf::int32 Header::msg_type() const {
  // @@protoc_insertion_point(field_get:yespo.Header.msg_type)
  return msg_type_;
}
inline void Header::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:yespo.Header.msg_type)
}

// optional uint64 msg_id = 2;
inline void Header::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Header::msg_id() const {
  // @@protoc_insertion_point(field_get:yespo.Header.msg_id)
  return msg_id_;
}
inline void Header::set_msg_id(::google::protobuf::uint64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.Header.msg_id)
}

// optional uint64 user_id = 3;
inline void Header::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Header::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.Header.user_id)
  return user_id_;
}
inline void Header::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.Header.user_id)
}

// optional .yespo.UserAgent user_agent = 4;
inline bool Header::has_user_agent() const {
  return !_is_default_instance_ && user_agent_ != NULL;
}
inline void Header::clear_user_agent() {
  if (GetArenaNoVirtual() == NULL && user_agent_ != NULL) delete user_agent_;
  user_agent_ = NULL;
}
inline const ::yespo::UserAgent& Header::user_agent() const {
  // @@protoc_insertion_point(field_get:yespo.Header.user_agent)
  return user_agent_ != NULL ? *user_agent_ : *default_instance_->user_agent_;
}
inline ::yespo::UserAgent* Header::mutable_user_agent() {
  
  if (user_agent_ == NULL) {
    user_agent_ = new ::yespo::UserAgent;
  }
  // @@protoc_insertion_point(field_mutable:yespo.Header.user_agent)
  return user_agent_;
}
inline ::yespo::UserAgent* Header::release_user_agent() {
  
  ::yespo::UserAgent* temp = user_agent_;
  user_agent_ = NULL;
  return temp;
}
inline void Header::set_allocated_user_agent(::yespo::UserAgent* user_agent) {
  delete user_agent_;
  user_agent_ = user_agent;
  if (user_agent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.Header.user_agent)
}

// optional uint64 timestamp = 5;
inline void Header::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Header::timestamp() const {
  // @@protoc_insertion_point(field_get:yespo.Header.timestamp)
  return timestamp_;
}
inline void Header::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yespo.Header.timestamp)
}

// -------------------------------------------------------------------

// RspMsg

// optional int32 rsp_code = 1;
inline void RspMsg::clear_rsp_code() {
  rsp_code_ = 0;
}
inline ::google::protobuf::int32 RspMsg::rsp_code() const {
  // @@protoc_insertion_point(field_get:yespo.RspMsg.rsp_code)
  return rsp_code_;
}
inline void RspMsg::set_rsp_code(::google::protobuf::int32 value) {
  
  rsp_code_ = value;
  // @@protoc_insertion_point(field_set:yespo.RspMsg.rsp_code)
}

// optional string rsp_msg = 2;
inline void RspMsg::clear_rsp_msg() {
  rsp_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RspMsg::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RspMsg.rsp_msg)
  return rsp_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RspMsg::set_rsp_msg(const ::std::string& value) {
  
  rsp_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RspMsg.rsp_msg)
}
inline void RspMsg::set_rsp_msg(const char* value) {
  
  rsp_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RspMsg.rsp_msg)
}
inline void RspMsg::set_rsp_msg(const char* value, size_t size) {
  
  rsp_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RspMsg.rsp_msg)
}
inline ::std::string* RspMsg::mutable_rsp_msg() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RspMsg.rsp_msg)
  return rsp_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RspMsg::release_rsp_msg() {
  
  return rsp_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RspMsg::set_allocated_rsp_msg(::std::string* rsp_msg) {
  if (rsp_msg != NULL) {
    
  } else {
    
  }
  rsp_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rsp_msg);
  // @@protoc_insertion_point(field_set_allocated:yespo.RspMsg.rsp_msg)
}

// -------------------------------------------------------------------

// AppHeartbeatReq

// optional int32 timestamp = 1;
inline void AppHeartbeatReq::clear_timestamp() {
  timestamp_ = 0;
}
inline ::google::protobuf::int32 AppHeartbeatReq::timestamp() const {
  // @@protoc_insertion_point(field_get:yespo.AppHeartbeatReq.timestamp)
  return timestamp_;
}
inline void AppHeartbeatReq::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppHeartbeatReq.timestamp)
}

// -------------------------------------------------------------------

// AppHeartbeatRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool AppHeartbeatRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void AppHeartbeatRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& AppHeartbeatRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.AppHeartbeatRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* AppHeartbeatRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.AppHeartbeatRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* AppHeartbeatRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void AppHeartbeatRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.AppHeartbeatRsp.rsp_msg)
}

// optional int32 timestamp = 2;
inline void AppHeartbeatRsp::clear_timestamp() {
  timestamp_ = 0;
}
inline ::google::protobuf::int32 AppHeartbeatRsp::timestamp() const {
  // @@protoc_insertion_point(field_get:yespo.AppHeartbeatRsp.timestamp)
  return timestamp_;
}
inline void AppHeartbeatRsp::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppHeartbeatRsp.timestamp)
}

// -------------------------------------------------------------------

// AppRepetitionLogin

// optional uint64 user_id = 1;
inline void AppRepetitionLogin::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppRepetitionLogin::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppRepetitionLogin.user_id)
  return user_id_;
}
inline void AppRepetitionLogin::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppRepetitionLogin.user_id)
}

// optional uint32 user_type = 2;
inline void AppRepetitionLogin::clear_user_type() {
  user_type_ = 0u;
}
inline ::google::protobuf::uint32 AppRepetitionLogin::user_type() const {
  // @@protoc_insertion_point(field_get:yespo.AppRepetitionLogin.user_type)
  return user_type_;
}
inline void AppRepetitionLogin::set_user_type(::google::protobuf::uint32 value) {
  
  user_type_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppRepetitionLogin.user_type)
}

// optional string device_token = 3;
inline void AppRepetitionLogin::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppRepetitionLogin::device_token() const {
  // @@protoc_insertion_point(field_get:yespo.AppRepetitionLogin.device_token)
  return device_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppRepetitionLogin::set_device_token(const ::std::string& value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppRepetitionLogin.device_token)
}
inline void AppRepetitionLogin::set_device_token(const char* value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppRepetitionLogin.device_token)
}
inline void AppRepetitionLogin::set_device_token(const char* value, size_t size) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppRepetitionLogin.device_token)
}
inline ::std::string* AppRepetitionLogin::mutable_device_token() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppRepetitionLogin.device_token)
  return device_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppRepetitionLogin::release_device_token() {
  
  return device_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppRepetitionLogin::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    
  } else {
    
  }
  device_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppRepetitionLogin.device_token)
}

// optional string accesssvr_ip = 4;
inline void AppRepetitionLogin::clear_accesssvr_ip() {
  accesssvr_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppRepetitionLogin::accesssvr_ip() const {
  // @@protoc_insertion_point(field_get:yespo.AppRepetitionLogin.accesssvr_ip)
  return accesssvr_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppRepetitionLogin::set_accesssvr_ip(const ::std::string& value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppRepetitionLogin.accesssvr_ip)
}
inline void AppRepetitionLogin::set_accesssvr_ip(const char* value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppRepetitionLogin.accesssvr_ip)
}
inline void AppRepetitionLogin::set_accesssvr_ip(const char* value, size_t size) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppRepetitionLogin.accesssvr_ip)
}
inline ::std::string* AppRepetitionLogin::mutable_accesssvr_ip() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppRepetitionLogin.accesssvr_ip)
  return accesssvr_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppRepetitionLogin::release_accesssvr_ip() {
  
  return accesssvr_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppRepetitionLogin::set_allocated_accesssvr_ip(::std::string* accesssvr_ip) {
  if (accesssvr_ip != NULL) {
    
  } else {
    
  }
  accesssvr_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesssvr_ip);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppRepetitionLogin.accesssvr_ip)
}

// optional uint32 accesssvr_port = 5;
inline void AppRepetitionLogin::clear_accesssvr_port() {
  accesssvr_port_ = 0u;
}
inline ::google::protobuf::uint32 AppRepetitionLogin::accesssvr_port() const {
  // @@protoc_insertion_point(field_get:yespo.AppRepetitionLogin.accesssvr_port)
  return accesssvr_port_;
}
inline void AppRepetitionLogin::set_accesssvr_port(::google::protobuf::uint32 value) {
  
  accesssvr_port_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppRepetitionLogin.accesssvr_port)
}

// optional uint32 accesssvr_sock = 6;
inline void AppRepetitionLogin::clear_accesssvr_sock() {
  accesssvr_sock_ = 0u;
}
inline ::google::protobuf::uint32 AppRepetitionLogin::accesssvr_sock() const {
  // @@protoc_insertion_point(field_get:yespo.AppRepetitionLogin.accesssvr_sock)
  return accesssvr_sock_;
}
inline void AppRepetitionLogin::set_accesssvr_sock(::google::protobuf::uint32 value) {
  
  accesssvr_sock_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppRepetitionLogin.accesssvr_sock)
}

// -------------------------------------------------------------------

// AppCalleeNotifyReq

// optional uint64 user_id = 1;
inline void AppCalleeNotifyReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppCalleeNotifyReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.user_id)
  return user_id_;
}
inline void AppCalleeNotifyReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.user_id)
}

// optional string room_address = 2;
inline void AppCalleeNotifyReq::clear_room_address() {
  room_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppCalleeNotifyReq::room_address() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.room_address)
  return room_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_room_address(const ::std::string& value) {
  
  room_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.room_address)
}
inline void AppCalleeNotifyReq::set_room_address(const char* value) {
  
  room_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppCalleeNotifyReq.room_address)
}
inline void AppCalleeNotifyReq::set_room_address(const char* value, size_t size) {
  
  room_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppCalleeNotifyReq.room_address)
}
inline ::std::string* AppCalleeNotifyReq::mutable_room_address() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppCalleeNotifyReq.room_address)
  return room_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppCalleeNotifyReq::release_room_address() {
  
  return room_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_allocated_room_address(::std::string* room_address) {
  if (room_address != NULL) {
    
  } else {
    
  }
  room_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_address);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppCalleeNotifyReq.room_address)
}

// optional string device_token = 3;
inline void AppCalleeNotifyReq::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppCalleeNotifyReq::device_token() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.device_token)
  return device_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_device_token(const ::std::string& value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.device_token)
}
inline void AppCalleeNotifyReq::set_device_token(const char* value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppCalleeNotifyReq.device_token)
}
inline void AppCalleeNotifyReq::set_device_token(const char* value, size_t size) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppCalleeNotifyReq.device_token)
}
inline ::std::string* AppCalleeNotifyReq::mutable_device_token() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppCalleeNotifyReq.device_token)
  return device_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppCalleeNotifyReq::release_device_token() {
  
  return device_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    
  } else {
    
  }
  device_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppCalleeNotifyReq.device_token)
}

// optional uint64 callee_id = 4;
inline void AppCalleeNotifyReq::clear_callee_id() {
  callee_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppCalleeNotifyReq::callee_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.callee_id)
  return callee_id_;
}
inline void AppCalleeNotifyReq::set_callee_id(::google::protobuf::uint64 value) {
  
  callee_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.callee_id)
}

// optional string source_language = 5;
inline void AppCalleeNotifyReq::clear_source_language() {
  source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppCalleeNotifyReq::source_language() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.source_language)
  return source_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_source_language(const ::std::string& value) {
  
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.source_language)
}
inline void AppCalleeNotifyReq::set_source_language(const char* value) {
  
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppCalleeNotifyReq.source_language)
}
inline void AppCalleeNotifyReq::set_source_language(const char* value, size_t size) {
  
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppCalleeNotifyReq.source_language)
}
inline ::std::string* AppCalleeNotifyReq::mutable_source_language() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppCalleeNotifyReq.source_language)
  return source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppCalleeNotifyReq::release_source_language() {
  
  return source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_allocated_source_language(::std::string* source_language) {
  if (source_language != NULL) {
    
  } else {
    
  }
  source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_language);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppCalleeNotifyReq.source_language)
}

// optional string target_language = 6;
inline void AppCalleeNotifyReq::clear_target_language() {
  target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppCalleeNotifyReq::target_language() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.target_language)
  return target_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_target_language(const ::std::string& value) {
  
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.target_language)
}
inline void AppCalleeNotifyReq::set_target_language(const char* value) {
  
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppCalleeNotifyReq.target_language)
}
inline void AppCalleeNotifyReq::set_target_language(const char* value, size_t size) {
  
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppCalleeNotifyReq.target_language)
}
inline ::std::string* AppCalleeNotifyReq::mutable_target_language() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppCalleeNotifyReq.target_language)
  return target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppCalleeNotifyReq::release_target_language() {
  
  return target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_allocated_target_language(::std::string* target_language) {
  if (target_language != NULL) {
    
  } else {
    
  }
  target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_language);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppCalleeNotifyReq.target_language)
}

// optional string call_mode = 7;
inline void AppCalleeNotifyReq::clear_call_mode() {
  call_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppCalleeNotifyReq::call_mode() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.call_mode)
  return call_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_call_mode(const ::std::string& value) {
  
  call_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.call_mode)
}
inline void AppCalleeNotifyReq::set_call_mode(const char* value) {
  
  call_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppCalleeNotifyReq.call_mode)
}
inline void AppCalleeNotifyReq::set_call_mode(const char* value, size_t size) {
  
  call_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppCalleeNotifyReq.call_mode)
}
inline ::std::string* AppCalleeNotifyReq::mutable_call_mode() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppCalleeNotifyReq.call_mode)
  return call_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppCalleeNotifyReq::release_call_mode() {
  
  return call_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_allocated_call_mode(::std::string* call_mode) {
  if (call_mode != NULL) {
    
  } else {
    
  }
  call_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_mode);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppCalleeNotifyReq.call_mode)
}

// optional string cdr_id = 8;
inline void AppCalleeNotifyReq::clear_cdr_id() {
  cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppCalleeNotifyReq::cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppCalleeNotifyReq.cdr_id)
  return cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_cdr_id(const ::std::string& value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppCalleeNotifyReq.cdr_id)
}
inline void AppCalleeNotifyReq::set_cdr_id(const char* value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppCalleeNotifyReq.cdr_id)
}
inline void AppCalleeNotifyReq::set_cdr_id(const char* value, size_t size) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppCalleeNotifyReq.cdr_id)
}
inline ::std::string* AppCalleeNotifyReq::mutable_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppCalleeNotifyReq.cdr_id)
  return cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppCalleeNotifyReq::release_cdr_id() {
  
  return cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppCalleeNotifyReq::set_allocated_cdr_id(::std::string* cdr_id) {
  if (cdr_id != NULL) {
    
  } else {
    
  }
  cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppCalleeNotifyReq.cdr_id)
}

// -------------------------------------------------------------------

// AppCallReadyReq

// optional uint64 user_id = 1;
inline void AppCallReadyReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppCallReadyReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppCallReadyReq.user_id)
  return user_id_;
}
inline void AppCallReadyReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppCallReadyReq.user_id)
}

// -------------------------------------------------------------------

// AppPhotoMsgReq

// optional uint64 user_id = 1;
inline void AppPhotoMsgReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppPhotoMsgReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppPhotoMsgReq.user_id)
  return user_id_;
}
inline void AppPhotoMsgReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppPhotoMsgReq.user_id)
}

// optional string msg = 2;
inline void AppPhotoMsgReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppPhotoMsgReq::msg() const {
  // @@protoc_insertion_point(field_get:yespo.AppPhotoMsgReq.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppPhotoMsgReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AppPhotoMsgReq.msg)
}
inline void AppPhotoMsgReq::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AppPhotoMsgReq.msg)
}
inline void AppPhotoMsgReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AppPhotoMsgReq.msg)
}
inline ::std::string* AppPhotoMsgReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AppPhotoMsgReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppPhotoMsgReq::release_msg() {
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppPhotoMsgReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:yespo.AppPhotoMsgReq.msg)
}

// -------------------------------------------------------------------

// AppCallStatusReq

// optional uint64 user_id = 1;
inline void AppCallStatusReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppCallStatusReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppCallStatusReq.user_id)
  return user_id_;
}
inline void AppCallStatusReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppCallStatusReq.user_id)
}

// optional uint32 call_status = 2;
inline void AppCallStatusReq::clear_call_status() {
  call_status_ = 0u;
}
inline ::google::protobuf::uint32 AppCallStatusReq::call_status() const {
  // @@protoc_insertion_point(field_get:yespo.AppCallStatusReq.call_status)
  return call_status_;
}
inline void AppCallStatusReq::set_call_status(::google::protobuf::uint32 value) {
  
  call_status_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppCallStatusReq.call_status)
}

// -------------------------------------------------------------------

// AppCallTerminateReq

// optional uint64 user_id = 1;
inline void AppCallTerminateReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppCallTerminateReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppCallTerminateReq.user_id)
  return user_id_;
}
inline void AppCallTerminateReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppCallTerminateReq.user_id)
}

// -------------------------------------------------------------------

// AppVideoSendReq

// optional uint64 user_id = 1;
inline void AppVideoSendReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppVideoSendReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppVideoSendReq.user_id)
  return user_id_;
}
inline void AppVideoSendReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppVideoSendReq.user_id)
}

// optional uint64 partner_id = 2;
inline void AppVideoSendReq::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppVideoSendReq::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppVideoSendReq.partner_id)
  return partner_id_;
}
inline void AppVideoSendReq::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppVideoSendReq.partner_id)
}

// optional uint32 video_status = 3;
inline void AppVideoSendReq::clear_video_status() {
  video_status_ = 0u;
}
inline ::google::protobuf::uint32 AppVideoSendReq::video_status() const {
  // @@protoc_insertion_point(field_get:yespo.AppVideoSendReq.video_status)
  return video_status_;
}
inline void AppVideoSendReq::set_video_status(::google::protobuf::uint32 value) {
  
  video_status_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppVideoSendReq.video_status)
}

// -------------------------------------------------------------------

// AppVideoRecvReq

// optional uint64 user_id = 1;
inline void AppVideoRecvReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppVideoRecvReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppVideoRecvReq.user_id)
  return user_id_;
}
inline void AppVideoRecvReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppVideoRecvReq.user_id)
}

// optional uint64 partner_id = 2;
inline void AppVideoRecvReq::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppVideoRecvReq::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.AppVideoRecvReq.partner_id)
  return partner_id_;
}
inline void AppVideoRecvReq::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppVideoRecvReq.partner_id)
}

// optional uint32 result = 3;
inline void AppVideoRecvReq::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 AppVideoRecvReq::result() const {
  // @@protoc_insertion_point(field_get:yespo.AppVideoRecvReq.result)
  return result_;
}
inline void AppVideoRecvReq::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:yespo.AppVideoRecvReq.result)
}

// -------------------------------------------------------------------

// AccessSvrHeartbeatFailReq

// optional string ip = 1;
inline void AccessSvrHeartbeatFailReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessSvrHeartbeatFailReq::ip() const {
  // @@protoc_insertion_point(field_get:yespo.AccessSvrHeartbeatFailReq.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessSvrHeartbeatFailReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AccessSvrHeartbeatFailReq.ip)
}
inline void AccessSvrHeartbeatFailReq::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AccessSvrHeartbeatFailReq.ip)
}
inline void AccessSvrHeartbeatFailReq::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AccessSvrHeartbeatFailReq.ip)
}
inline ::std::string* AccessSvrHeartbeatFailReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AccessSvrHeartbeatFailReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessSvrHeartbeatFailReq::release_ip() {
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessSvrHeartbeatFailReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:yespo.AccessSvrHeartbeatFailReq.ip)
}

// optional uint32 socket = 2;
inline void AccessSvrHeartbeatFailReq::clear_socket() {
  socket_ = 0u;
}
inline ::google::protobuf::uint32 AccessSvrHeartbeatFailReq::socket() const {
  // @@protoc_insertion_point(field_get:yespo.AccessSvrHeartbeatFailReq.socket)
  return socket_;
}
inline void AccessSvrHeartbeatFailReq::set_socket(::google::protobuf::uint32 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:yespo.AccessSvrHeartbeatFailReq.socket)
}

// -------------------------------------------------------------------

// LoginSvrLoginReq

// optional uint64 user_id = 1;
inline void LoginSvrLoginReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoginSvrLoginReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginReq.user_id)
  return user_id_;
}
inline void LoginSvrLoginReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLoginReq.user_id)
}

// optional uint32 user_type = 2;
inline void LoginSvrLoginReq::clear_user_type() {
  user_type_ = 0u;
}
inline ::google::protobuf::uint32 LoginSvrLoginReq::user_type() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginReq.user_type)
  return user_type_;
}
inline void LoginSvrLoginReq::set_user_type(::google::protobuf::uint32 value) {
  
  user_type_ = value;
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLoginReq.user_type)
}

// optional string token = 3;
inline void LoginSvrLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginSvrLoginReq::token() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginSvrLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLoginReq.token)
}
inline void LoginSvrLoginReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.LoginSvrLoginReq.token)
}
inline void LoginSvrLoginReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.LoginSvrLoginReq.token)
}
inline ::std::string* LoginSvrLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:yespo.LoginSvrLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginSvrLoginReq::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginSvrLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:yespo.LoginSvrLoginReq.token)
}

// optional string device_token = 4;
inline void LoginSvrLoginReq::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginSvrLoginReq::device_token() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginReq.device_token)
  return device_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginSvrLoginReq::set_device_token(const ::std::string& value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLoginReq.device_token)
}
inline void LoginSvrLoginReq::set_device_token(const char* value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.LoginSvrLoginReq.device_token)
}
inline void LoginSvrLoginReq::set_device_token(const char* value, size_t size) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.LoginSvrLoginReq.device_token)
}
inline ::std::string* LoginSvrLoginReq::mutable_device_token() {
  
  // @@protoc_insertion_point(field_mutable:yespo.LoginSvrLoginReq.device_token)
  return device_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginSvrLoginReq::release_device_token() {
  
  return device_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginSvrLoginReq::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    
  } else {
    
  }
  device_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:yespo.LoginSvrLoginReq.device_token)
}

// optional string accesssvr_ip = 5;
inline void LoginSvrLoginReq::clear_accesssvr_ip() {
  accesssvr_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginSvrLoginReq::accesssvr_ip() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginReq.accesssvr_ip)
  return accesssvr_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginSvrLoginReq::set_accesssvr_ip(const ::std::string& value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLoginReq.accesssvr_ip)
}
inline void LoginSvrLoginReq::set_accesssvr_ip(const char* value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.LoginSvrLoginReq.accesssvr_ip)
}
inline void LoginSvrLoginReq::set_accesssvr_ip(const char* value, size_t size) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.LoginSvrLoginReq.accesssvr_ip)
}
inline ::std::string* LoginSvrLoginReq::mutable_accesssvr_ip() {
  
  // @@protoc_insertion_point(field_mutable:yespo.LoginSvrLoginReq.accesssvr_ip)
  return accesssvr_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginSvrLoginReq::release_accesssvr_ip() {
  
  return accesssvr_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginSvrLoginReq::set_allocated_accesssvr_ip(::std::string* accesssvr_ip) {
  if (accesssvr_ip != NULL) {
    
  } else {
    
  }
  accesssvr_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesssvr_ip);
  // @@protoc_insertion_point(field_set_allocated:yespo.LoginSvrLoginReq.accesssvr_ip)
}

// optional uint32 accesssvr_port = 6;
inline void LoginSvrLoginReq::clear_accesssvr_port() {
  accesssvr_port_ = 0u;
}
inline ::google::protobuf::uint32 LoginSvrLoginReq::accesssvr_port() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginReq.accesssvr_port)
  return accesssvr_port_;
}
inline void LoginSvrLoginReq::set_accesssvr_port(::google::protobuf::uint32 value) {
  
  accesssvr_port_ = value;
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLoginReq.accesssvr_port)
}

// optional uint32 accesssvr_sock = 7;
inline void LoginSvrLoginReq::clear_accesssvr_sock() {
  accesssvr_sock_ = 0u;
}
inline ::google::protobuf::uint32 LoginSvrLoginReq::accesssvr_sock() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginReq.accesssvr_sock)
  return accesssvr_sock_;
}
inline void LoginSvrLoginReq::set_accesssvr_sock(::google::protobuf::uint32 value) {
  
  accesssvr_sock_ = value;
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLoginReq.accesssvr_sock)
}

// -------------------------------------------------------------------

// LoginSvrLoginRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool LoginSvrLoginRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void LoginSvrLoginRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& LoginSvrLoginRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLoginRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* LoginSvrLoginRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.LoginSvrLoginRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* LoginSvrLoginRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void LoginSvrLoginRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.LoginSvrLoginRsp.rsp_msg)
}

// -------------------------------------------------------------------

// LoginSvrLogoutReq

// optional uint64 user_id = 1;
inline void LoginSvrLogoutReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoginSvrLogoutReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLogoutReq.user_id)
  return user_id_;
}
inline void LoginSvrLogoutReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.LoginSvrLogoutReq.user_id)
}

// -------------------------------------------------------------------

// LoginSvrLogoutRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool LoginSvrLogoutRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void LoginSvrLogoutRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& LoginSvrLogoutRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.LoginSvrLogoutRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* LoginSvrLogoutRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.LoginSvrLogoutRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* LoginSvrLogoutRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void LoginSvrLogoutRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.LoginSvrLogoutRsp.rsp_msg)
}

// -------------------------------------------------------------------

// StatusSvrAdduserReq

// optional uint64 user_id = 1;
inline void StatusSvrAdduserReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusSvrAdduserReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserReq.user_id)
  return user_id_;
}
inline void StatusSvrAdduserReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserReq.user_id)
}

// optional uint32 user_type = 2;
inline void StatusSvrAdduserReq::clear_user_type() {
  user_type_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrAdduserReq::user_type() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserReq.user_type)
  return user_type_;
}
inline void StatusSvrAdduserReq::set_user_type(::google::protobuf::uint32 value) {
  
  user_type_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserReq.user_type)
}

// optional string device_token = 3;
inline void StatusSvrAdduserReq::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusSvrAdduserReq::device_token() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserReq.device_token)
  return device_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserReq::set_device_token(const ::std::string& value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserReq.device_token)
}
inline void StatusSvrAdduserReq::set_device_token(const char* value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.StatusSvrAdduserReq.device_token)
}
inline void StatusSvrAdduserReq::set_device_token(const char* value, size_t size) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.StatusSvrAdduserReq.device_token)
}
inline ::std::string* StatusSvrAdduserReq::mutable_device_token() {
  
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrAdduserReq.device_token)
  return device_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusSvrAdduserReq::release_device_token() {
  
  return device_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserReq::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    
  } else {
    
  }
  device_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrAdduserReq.device_token)
}

// optional string accesssvr_ip = 4;
inline void StatusSvrAdduserReq::clear_accesssvr_ip() {
  accesssvr_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusSvrAdduserReq::accesssvr_ip() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserReq.accesssvr_ip)
  return accesssvr_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserReq::set_accesssvr_ip(const ::std::string& value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserReq.accesssvr_ip)
}
inline void StatusSvrAdduserReq::set_accesssvr_ip(const char* value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.StatusSvrAdduserReq.accesssvr_ip)
}
inline void StatusSvrAdduserReq::set_accesssvr_ip(const char* value, size_t size) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.StatusSvrAdduserReq.accesssvr_ip)
}
inline ::std::string* StatusSvrAdduserReq::mutable_accesssvr_ip() {
  
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrAdduserReq.accesssvr_ip)
  return accesssvr_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusSvrAdduserReq::release_accesssvr_ip() {
  
  return accesssvr_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserReq::set_allocated_accesssvr_ip(::std::string* accesssvr_ip) {
  if (accesssvr_ip != NULL) {
    
  } else {
    
  }
  accesssvr_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesssvr_ip);
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrAdduserReq.accesssvr_ip)
}

// optional uint32 accesssvr_port = 5;
inline void StatusSvrAdduserReq::clear_accesssvr_port() {
  accesssvr_port_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrAdduserReq::accesssvr_port() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserReq.accesssvr_port)
  return accesssvr_port_;
}
inline void StatusSvrAdduserReq::set_accesssvr_port(::google::protobuf::uint32 value) {
  
  accesssvr_port_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserReq.accesssvr_port)
}

// optional uint32 socket = 6;
inline void StatusSvrAdduserReq::clear_socket() {
  socket_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrAdduserReq::socket() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserReq.socket)
  return socket_;
}
inline void StatusSvrAdduserReq::set_socket(::google::protobuf::uint32 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserReq.socket)
}

// -------------------------------------------------------------------

// StatusSvrAdduserRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool StatusSvrAdduserRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void StatusSvrAdduserRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& StatusSvrAdduserRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrAdduserRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrAdduserRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrAdduserRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void StatusSvrAdduserRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrAdduserRsp.rsp_msg)
}

// optional uint64 user_id = 2;
inline void StatusSvrAdduserRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusSvrAdduserRsp::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserRsp.user_id)
  return user_id_;
}
inline void StatusSvrAdduserRsp::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserRsp.user_id)
}

// optional uint32 user_type = 3;
inline void StatusSvrAdduserRsp::clear_user_type() {
  user_type_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrAdduserRsp::user_type() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserRsp.user_type)
  return user_type_;
}
inline void StatusSvrAdduserRsp::set_user_type(::google::protobuf::uint32 value) {
  
  user_type_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserRsp.user_type)
}

// optional string device_token = 4;
inline void StatusSvrAdduserRsp::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusSvrAdduserRsp::device_token() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserRsp.device_token)
  return device_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserRsp::set_device_token(const ::std::string& value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserRsp.device_token)
}
inline void StatusSvrAdduserRsp::set_device_token(const char* value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.StatusSvrAdduserRsp.device_token)
}
inline void StatusSvrAdduserRsp::set_device_token(const char* value, size_t size) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.StatusSvrAdduserRsp.device_token)
}
inline ::std::string* StatusSvrAdduserRsp::mutable_device_token() {
  
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrAdduserRsp.device_token)
  return device_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusSvrAdduserRsp::release_device_token() {
  
  return device_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserRsp::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    
  } else {
    
  }
  device_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrAdduserRsp.device_token)
}

// optional string accesssvr_ip = 5;
inline void StatusSvrAdduserRsp::clear_accesssvr_ip() {
  accesssvr_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusSvrAdduserRsp::accesssvr_ip() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserRsp.accesssvr_ip)
  return accesssvr_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserRsp::set_accesssvr_ip(const ::std::string& value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserRsp.accesssvr_ip)
}
inline void StatusSvrAdduserRsp::set_accesssvr_ip(const char* value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.StatusSvrAdduserRsp.accesssvr_ip)
}
inline void StatusSvrAdduserRsp::set_accesssvr_ip(const char* value, size_t size) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.StatusSvrAdduserRsp.accesssvr_ip)
}
inline ::std::string* StatusSvrAdduserRsp::mutable_accesssvr_ip() {
  
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrAdduserRsp.accesssvr_ip)
  return accesssvr_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusSvrAdduserRsp::release_accesssvr_ip() {
  
  return accesssvr_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrAdduserRsp::set_allocated_accesssvr_ip(::std::string* accesssvr_ip) {
  if (accesssvr_ip != NULL) {
    
  } else {
    
  }
  accesssvr_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesssvr_ip);
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrAdduserRsp.accesssvr_ip)
}

// optional uint32 accesssvr_port = 6;
inline void StatusSvrAdduserRsp::clear_accesssvr_port() {
  accesssvr_port_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrAdduserRsp::accesssvr_port() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserRsp.accesssvr_port)
  return accesssvr_port_;
}
inline void StatusSvrAdduserRsp::set_accesssvr_port(::google::protobuf::uint32 value) {
  
  accesssvr_port_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserRsp.accesssvr_port)
}

// optional uint32 socket = 7;
inline void StatusSvrAdduserRsp::clear_socket() {
  socket_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrAdduserRsp::socket() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrAdduserRsp.socket)
  return socket_;
}
inline void StatusSvrAdduserRsp::set_socket(::google::protobuf::uint32 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrAdduserRsp.socket)
}

// -------------------------------------------------------------------

// StatusSvrDeluserReq

// optional uint64 user_id = 1;
inline void StatusSvrDeluserReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusSvrDeluserReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrDeluserReq.user_id)
  return user_id_;
}
inline void StatusSvrDeluserReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrDeluserReq.user_id)
}

// optional string ip = 2;
inline void StatusSvrDeluserReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusSvrDeluserReq::ip() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrDeluserReq.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrDeluserReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrDeluserReq.ip)
}
inline void StatusSvrDeluserReq::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.StatusSvrDeluserReq.ip)
}
inline void StatusSvrDeluserReq::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.StatusSvrDeluserReq.ip)
}
inline ::std::string* StatusSvrDeluserReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrDeluserReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusSvrDeluserReq::release_ip() {
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrDeluserReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrDeluserReq.ip)
}

// optional int32 socket = 3;
inline void StatusSvrDeluserReq::clear_socket() {
  socket_ = 0;
}
inline ::google::protobuf::int32 StatusSvrDeluserReq::socket() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrDeluserReq.socket)
  return socket_;
}
inline void StatusSvrDeluserReq::set_socket(::google::protobuf::int32 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrDeluserReq.socket)
}

// -------------------------------------------------------------------

// StatusSvrDeluserRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool StatusSvrDeluserRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void StatusSvrDeluserRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& StatusSvrDeluserRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrDeluserRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrDeluserRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrDeluserRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrDeluserRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void StatusSvrDeluserRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrDeluserRsp.rsp_msg)
}

// -------------------------------------------------------------------

// StatusSvrStatusQueryReq

// repeated uint64 user_id = 1;
inline int StatusSvrStatusQueryReq::user_id_size() const {
  return user_id_.size();
}
inline void StatusSvrStatusQueryReq::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 StatusSvrStatusQueryReq::user_id(int index) const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrStatusQueryReq.user_id)
  return user_id_.Get(index);
}
inline void StatusSvrStatusQueryReq::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrStatusQueryReq.user_id)
}
inline void StatusSvrStatusQueryReq::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
  // @@protoc_insertion_point(field_add:yespo.StatusSvrStatusQueryReq.user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
StatusSvrStatusQueryReq::user_id() const {
  // @@protoc_insertion_point(field_list:yespo.StatusSvrStatusQueryReq.user_id)
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
StatusSvrStatusQueryReq::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:yespo.StatusSvrStatusQueryReq.user_id)
  return &user_id_;
}

// -------------------------------------------------------------------

// StatusSvrStatusItem

// optional uint64 user_id = 1;
inline void StatusSvrStatusItem::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusSvrStatusItem::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrStatusItem.user_id)
  return user_id_;
}
inline void StatusSvrStatusItem::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrStatusItem.user_id)
}

// optional int32 status = 2;
inline void StatusSvrStatusItem::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 StatusSvrStatusItem::status() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrStatusItem.status)
  return status_;
}
inline void StatusSvrStatusItem::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrStatusItem.status)
}

// -------------------------------------------------------------------

// StatusSvrStatusQueryRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool StatusSvrStatusQueryRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void StatusSvrStatusQueryRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& StatusSvrStatusQueryRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrStatusQueryRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrStatusQueryRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrStatusQueryRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrStatusQueryRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void StatusSvrStatusQueryRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrStatusQueryRsp.rsp_msg)
}

// repeated .yespo.StatusSvrStatusItem status_item = 2;
inline int StatusSvrStatusQueryRsp::status_item_size() const {
  return status_item_.size();
}
inline void StatusSvrStatusQueryRsp::clear_status_item() {
  status_item_.Clear();
}
inline const ::yespo::StatusSvrStatusItem& StatusSvrStatusQueryRsp::status_item(int index) const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrStatusQueryRsp.status_item)
  return status_item_.Get(index);
}
inline ::yespo::StatusSvrStatusItem* StatusSvrStatusQueryRsp::mutable_status_item(int index) {
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrStatusQueryRsp.status_item)
  return status_item_.Mutable(index);
}
inline ::yespo::StatusSvrStatusItem* StatusSvrStatusQueryRsp::add_status_item() {
  // @@protoc_insertion_point(field_add:yespo.StatusSvrStatusQueryRsp.status_item)
  return status_item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::yespo::StatusSvrStatusItem >*
StatusSvrStatusQueryRsp::mutable_status_item() {
  // @@protoc_insertion_point(field_mutable_list:yespo.StatusSvrStatusQueryRsp.status_item)
  return &status_item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::yespo::StatusSvrStatusItem >&
StatusSvrStatusQueryRsp::status_item() const {
  // @@protoc_insertion_point(field_list:yespo.StatusSvrStatusQueryRsp.status_item)
  return status_item_;
}

// -------------------------------------------------------------------

// StatusSvrUserInfoReq

// optional uint64 user_id = 1;
inline void StatusSvrUserInfoReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusSvrUserInfoReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoReq.user_id)
  return user_id_;
}
inline void StatusSvrUserInfoReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrUserInfoReq.user_id)
}

// -------------------------------------------------------------------

// StatusSvrUserInfoRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool StatusSvrUserInfoRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void StatusSvrUserInfoRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& StatusSvrUserInfoRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrUserInfoRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrUserInfoRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* StatusSvrUserInfoRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void StatusSvrUserInfoRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrUserInfoRsp.rsp_msg)
}

// optional uint64 user_id = 2;
inline void StatusSvrUserInfoRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusSvrUserInfoRsp::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoRsp.user_id)
  return user_id_;
}
inline void StatusSvrUserInfoRsp::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrUserInfoRsp.user_id)
}

// optional uint32 user_type = 3;
inline void StatusSvrUserInfoRsp::clear_user_type() {
  user_type_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrUserInfoRsp::user_type() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoRsp.user_type)
  return user_type_;
}
inline void StatusSvrUserInfoRsp::set_user_type(::google::protobuf::uint32 value) {
  
  user_type_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrUserInfoRsp.user_type)
}

// optional string device_token = 4;
inline void StatusSvrUserInfoRsp::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusSvrUserInfoRsp::device_token() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoRsp.device_token)
  return device_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrUserInfoRsp::set_device_token(const ::std::string& value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrUserInfoRsp.device_token)
}
inline void StatusSvrUserInfoRsp::set_device_token(const char* value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.StatusSvrUserInfoRsp.device_token)
}
inline void StatusSvrUserInfoRsp::set_device_token(const char* value, size_t size) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.StatusSvrUserInfoRsp.device_token)
}
inline ::std::string* StatusSvrUserInfoRsp::mutable_device_token() {
  
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrUserInfoRsp.device_token)
  return device_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusSvrUserInfoRsp::release_device_token() {
  
  return device_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrUserInfoRsp::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    
  } else {
    
  }
  device_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrUserInfoRsp.device_token)
}

// optional string accesssvr_ip = 5;
inline void StatusSvrUserInfoRsp::clear_accesssvr_ip() {
  accesssvr_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusSvrUserInfoRsp::accesssvr_ip() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoRsp.accesssvr_ip)
  return accesssvr_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrUserInfoRsp::set_accesssvr_ip(const ::std::string& value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.StatusSvrUserInfoRsp.accesssvr_ip)
}
inline void StatusSvrUserInfoRsp::set_accesssvr_ip(const char* value) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.StatusSvrUserInfoRsp.accesssvr_ip)
}
inline void StatusSvrUserInfoRsp::set_accesssvr_ip(const char* value, size_t size) {
  
  accesssvr_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.StatusSvrUserInfoRsp.accesssvr_ip)
}
inline ::std::string* StatusSvrUserInfoRsp::mutable_accesssvr_ip() {
  
  // @@protoc_insertion_point(field_mutable:yespo.StatusSvrUserInfoRsp.accesssvr_ip)
  return accesssvr_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusSvrUserInfoRsp::release_accesssvr_ip() {
  
  return accesssvr_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusSvrUserInfoRsp::set_allocated_accesssvr_ip(::std::string* accesssvr_ip) {
  if (accesssvr_ip != NULL) {
    
  } else {
    
  }
  accesssvr_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesssvr_ip);
  // @@protoc_insertion_point(field_set_allocated:yespo.StatusSvrUserInfoRsp.accesssvr_ip)
}

// optional uint32 accesssvr_port = 6;
inline void StatusSvrUserInfoRsp::clear_accesssvr_port() {
  accesssvr_port_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrUserInfoRsp::accesssvr_port() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoRsp.accesssvr_port)
  return accesssvr_port_;
}
inline void StatusSvrUserInfoRsp::set_accesssvr_port(::google::protobuf::uint32 value) {
  
  accesssvr_port_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrUserInfoRsp.accesssvr_port)
}

// optional uint32 socket = 7;
inline void StatusSvrUserInfoRsp::clear_socket() {
  socket_ = 0u;
}
inline ::google::protobuf::uint32 StatusSvrUserInfoRsp::socket() const {
  // @@protoc_insertion_point(field_get:yespo.StatusSvrUserInfoRsp.socket)
  return socket_;
}
inline void StatusSvrUserInfoRsp::set_socket(::google::protobuf::uint32 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:yespo.StatusSvrUserInfoRsp.socket)
}

// -------------------------------------------------------------------

// RoomsvrDistributeReq

// optional uint64 user_id = 1;
inline void RoomsvrDistributeReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrDistributeReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.user_id)
  return user_id_;
}
inline void RoomsvrDistributeReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.user_id)
}

// optional uint64 partner_id = 2;
inline void RoomsvrDistributeReq::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrDistributeReq::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.partner_id)
  return partner_id_;
}
inline void RoomsvrDistributeReq::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.partner_id)
}

// optional uint64 callee_id = 3;
inline void RoomsvrDistributeReq::clear_callee_id() {
  callee_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrDistributeReq::callee_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.callee_id)
  return callee_id_;
}
inline void RoomsvrDistributeReq::set_callee_id(::google::protobuf::uint64 value) {
  
  callee_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.callee_id)
}

// optional string source_language = 4;
inline void RoomsvrDistributeReq::clear_source_language() {
  source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeReq::source_language() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.source_language)
  return source_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_source_language(const ::std::string& value) {
  
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.source_language)
}
inline void RoomsvrDistributeReq::set_source_language(const char* value) {
  
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeReq.source_language)
}
inline void RoomsvrDistributeReq::set_source_language(const char* value, size_t size) {
  
  source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeReq.source_language)
}
inline ::std::string* RoomsvrDistributeReq::mutable_source_language() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeReq.source_language)
  return source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeReq::release_source_language() {
  
  return source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_allocated_source_language(::std::string* source_language) {
  if (source_language != NULL) {
    
  } else {
    
  }
  source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_language);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeReq.source_language)
}

// optional string target_language = 5;
inline void RoomsvrDistributeReq::clear_target_language() {
  target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeReq::target_language() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.target_language)
  return target_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_target_language(const ::std::string& value) {
  
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.target_language)
}
inline void RoomsvrDistributeReq::set_target_language(const char* value) {
  
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeReq.target_language)
}
inline void RoomsvrDistributeReq::set_target_language(const char* value, size_t size) {
  
  target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeReq.target_language)
}
inline ::std::string* RoomsvrDistributeReq::mutable_target_language() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeReq.target_language)
  return target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeReq::release_target_language() {
  
  return target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_allocated_target_language(::std::string* target_language) {
  if (target_language != NULL) {
    
  } else {
    
  }
  target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_language);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeReq.target_language)
}

// optional string call_mode = 6;
inline void RoomsvrDistributeReq::clear_call_mode() {
  call_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeReq::call_mode() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.call_mode)
  return call_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_call_mode(const ::std::string& value) {
  
  call_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.call_mode)
}
inline void RoomsvrDistributeReq::set_call_mode(const char* value) {
  
  call_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeReq.call_mode)
}
inline void RoomsvrDistributeReq::set_call_mode(const char* value, size_t size) {
  
  call_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeReq.call_mode)
}
inline ::std::string* RoomsvrDistributeReq::mutable_call_mode() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeReq.call_mode)
  return call_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeReq::release_call_mode() {
  
  return call_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_allocated_call_mode(::std::string* call_mode) {
  if (call_mode != NULL) {
    
  } else {
    
  }
  call_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_mode);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeReq.call_mode)
}

// optional string call_country = 7;
inline void RoomsvrDistributeReq::clear_call_country() {
  call_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeReq::call_country() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.call_country)
  return call_country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_call_country(const ::std::string& value) {
  
  call_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.call_country)
}
inline void RoomsvrDistributeReq::set_call_country(const char* value) {
  
  call_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeReq.call_country)
}
inline void RoomsvrDistributeReq::set_call_country(const char* value, size_t size) {
  
  call_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeReq.call_country)
}
inline ::std::string* RoomsvrDistributeReq::mutable_call_country() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeReq.call_country)
  return call_country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeReq::release_call_country() {
  
  return call_country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_allocated_call_country(::std::string* call_country) {
  if (call_country != NULL) {
    
  } else {
    
  }
  call_country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_country);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeReq.call_country)
}

// optional string country_code = 8;
inline void RoomsvrDistributeReq::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeReq::country_code() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.country_code)
  return country_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.country_code)
}
inline void RoomsvrDistributeReq::set_country_code(const char* value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeReq.country_code)
}
inline void RoomsvrDistributeReq::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeReq.country_code)
}
inline ::std::string* RoomsvrDistributeReq::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeReq.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeReq::release_country_code() {
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeReq.country_code)
}

// optional string parent_cdr_id = 9;
inline void RoomsvrDistributeReq::clear_parent_cdr_id() {
  parent_cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeReq::parent_cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeReq.parent_cdr_id)
  return parent_cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_parent_cdr_id(const ::std::string& value) {
  
  parent_cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeReq.parent_cdr_id)
}
inline void RoomsvrDistributeReq::set_parent_cdr_id(const char* value) {
  
  parent_cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeReq.parent_cdr_id)
}
inline void RoomsvrDistributeReq::set_parent_cdr_id(const char* value, size_t size) {
  
  parent_cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeReq.parent_cdr_id)
}
inline ::std::string* RoomsvrDistributeReq::mutable_parent_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeReq.parent_cdr_id)
  return parent_cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeReq::release_parent_cdr_id() {
  
  return parent_cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeReq::set_allocated_parent_cdr_id(::std::string* parent_cdr_id) {
  if (parent_cdr_id != NULL) {
    
  } else {
    
  }
  parent_cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeReq.parent_cdr_id)
}

// -------------------------------------------------------------------

// RoomsvrDistributeRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrDistributeRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrDistributeRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrDistributeRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrDistributeRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrDistributeRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrDistributeRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeRsp.rsp_msg)
}

// optional uint64 user_id = 2;
inline void RoomsvrDistributeRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrDistributeRsp::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeRsp.user_id)
  return user_id_;
}
inline void RoomsvrDistributeRsp::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeRsp.user_id)
}

// optional string room_address = 3;
inline void RoomsvrDistributeRsp::clear_room_address() {
  room_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeRsp::room_address() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeRsp.room_address)
  return room_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_room_address(const ::std::string& value) {
  
  room_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeRsp.room_address)
}
inline void RoomsvrDistributeRsp::set_room_address(const char* value) {
  
  room_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeRsp.room_address)
}
inline void RoomsvrDistributeRsp::set_room_address(const char* value, size_t size) {
  
  room_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeRsp.room_address)
}
inline ::std::string* RoomsvrDistributeRsp::mutable_room_address() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeRsp.room_address)
  return room_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeRsp::release_room_address() {
  
  return room_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_allocated_room_address(::std::string* room_address) {
  if (room_address != NULL) {
    
  } else {
    
  }
  room_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_address);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeRsp.room_address)
}

// optional string cdr_id = 4;
inline void RoomsvrDistributeRsp::clear_cdr_id() {
  cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeRsp::cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeRsp.cdr_id)
  return cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_cdr_id(const ::std::string& value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeRsp.cdr_id)
}
inline void RoomsvrDistributeRsp::set_cdr_id(const char* value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeRsp.cdr_id)
}
inline void RoomsvrDistributeRsp::set_cdr_id(const char* value, size_t size) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeRsp.cdr_id)
}
inline ::std::string* RoomsvrDistributeRsp::mutable_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeRsp.cdr_id)
  return cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeRsp::release_cdr_id() {
  
  return cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_allocated_cdr_id(::std::string* cdr_id) {
  if (cdr_id != NULL) {
    
  } else {
    
  }
  cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeRsp.cdr_id)
}

// optional string record_path = 5;
inline void RoomsvrDistributeRsp::clear_record_path() {
  record_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeRsp::record_path() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeRsp.record_path)
  return record_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_record_path(const ::std::string& value) {
  
  record_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeRsp.record_path)
}
inline void RoomsvrDistributeRsp::set_record_path(const char* value) {
  
  record_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeRsp.record_path)
}
inline void RoomsvrDistributeRsp::set_record_path(const char* value, size_t size) {
  
  record_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeRsp.record_path)
}
inline ::std::string* RoomsvrDistributeRsp::mutable_record_path() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeRsp.record_path)
  return record_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeRsp::release_record_path() {
  
  return record_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_allocated_record_path(::std::string* record_path) {
  if (record_path != NULL) {
    
  } else {
    
  }
  record_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_path);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeRsp.record_path)
}

// optional string parent_cdr_id = 6;
inline void RoomsvrDistributeRsp::clear_parent_cdr_id() {
  parent_cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrDistributeRsp::parent_cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrDistributeRsp.parent_cdr_id)
  return parent_cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_parent_cdr_id(const ::std::string& value) {
  
  parent_cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrDistributeRsp.parent_cdr_id)
}
inline void RoomsvrDistributeRsp::set_parent_cdr_id(const char* value) {
  
  parent_cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrDistributeRsp.parent_cdr_id)
}
inline void RoomsvrDistributeRsp::set_parent_cdr_id(const char* value, size_t size) {
  
  parent_cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrDistributeRsp.parent_cdr_id)
}
inline ::std::string* RoomsvrDistributeRsp::mutable_parent_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrDistributeRsp.parent_cdr_id)
  return parent_cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrDistributeRsp::release_parent_cdr_id() {
  
  return parent_cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrDistributeRsp::set_allocated_parent_cdr_id(::std::string* parent_cdr_id) {
  if (parent_cdr_id != NULL) {
    
  } else {
    
  }
  parent_cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrDistributeRsp.parent_cdr_id)
}

// -------------------------------------------------------------------

// RoomsvrCallCancelReq

// optional uint64 user_id = 1;
inline void RoomsvrCallCancelReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrCallCancelReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrCallCancelReq.user_id)
  return user_id_;
}
inline void RoomsvrCallCancelReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrCallCancelReq.user_id)
}

// optional uint64 partner_id = 2;
inline void RoomsvrCallCancelReq::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrCallCancelReq::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrCallCancelReq.partner_id)
  return partner_id_;
}
inline void RoomsvrCallCancelReq::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrCallCancelReq.partner_id)
}

// -------------------------------------------------------------------

// RoomsvrCallCancelRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrCallCancelRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrCallCancelRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrCallCancelRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrCallCancelRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrCallCancelRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrCallCancelRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrCallCancelRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrCallCancelRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrCallCancelRsp.rsp_msg)
}

// -------------------------------------------------------------------

// RoomsvrPartnerStatusReq

// optional uint64 user_id = 1;
inline void RoomsvrPartnerStatusReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrPartnerStatusReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusReq.user_id)
  return user_id_;
}
inline void RoomsvrPartnerStatusReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrPartnerStatusReq.user_id)
}

// repeated uint64 partner_id = 2;
inline int RoomsvrPartnerStatusReq::partner_id_size() const {
  return partner_id_.size();
}
inline void RoomsvrPartnerStatusReq::clear_partner_id() {
  partner_id_.Clear();
}
inline ::google::protobuf::uint64 RoomsvrPartnerStatusReq::partner_id(int index) const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusReq.partner_id)
  return partner_id_.Get(index);
}
inline void RoomsvrPartnerStatusReq::set_partner_id(int index, ::google::protobuf::uint64 value) {
  partner_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrPartnerStatusReq.partner_id)
}
inline void RoomsvrPartnerStatusReq::add_partner_id(::google::protobuf::uint64 value) {
  partner_id_.Add(value);
  // @@protoc_insertion_point(field_add:yespo.RoomsvrPartnerStatusReq.partner_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RoomsvrPartnerStatusReq::partner_id() const {
  // @@protoc_insertion_point(field_list:yespo.RoomsvrPartnerStatusReq.partner_id)
  return partner_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RoomsvrPartnerStatusReq::mutable_partner_id() {
  // @@protoc_insertion_point(field_mutable_list:yespo.RoomsvrPartnerStatusReq.partner_id)
  return &partner_id_;
}

// -------------------------------------------------------------------

// RoomsvrPartnerStatusItem

// optional uint64 partner_id = 1;
inline void RoomsvrPartnerStatusItem::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrPartnerStatusItem::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusItem.partner_id)
  return partner_id_;
}
inline void RoomsvrPartnerStatusItem::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrPartnerStatusItem.partner_id)
}

// optional int32 online_status = 2;
inline void RoomsvrPartnerStatusItem::clear_online_status() {
  online_status_ = 0;
}
inline ::google::protobuf::int32 RoomsvrPartnerStatusItem::online_status() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusItem.online_status)
  return online_status_;
}
inline void RoomsvrPartnerStatusItem::set_online_status(::google::protobuf::int32 value) {
  
  online_status_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrPartnerStatusItem.online_status)
}

// optional int32 call_status = 3;
inline void RoomsvrPartnerStatusItem::clear_call_status() {
  call_status_ = 0;
}
inline ::google::protobuf::int32 RoomsvrPartnerStatusItem::call_status() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusItem.call_status)
  return call_status_;
}
inline void RoomsvrPartnerStatusItem::set_call_status(::google::protobuf::int32 value) {
  
  call_status_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrPartnerStatusItem.call_status)
}

// -------------------------------------------------------------------

// RoomsvrPartnerStatusRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrPartnerStatusRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrPartnerStatusRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrPartnerStatusRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrPartnerStatusRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrPartnerStatusRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrPartnerStatusRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrPartnerStatusRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrPartnerStatusRsp.rsp_msg)
}

// optional uint64 user_id = 2;
inline void RoomsvrPartnerStatusRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrPartnerStatusRsp::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusRsp.user_id)
  return user_id_;
}
inline void RoomsvrPartnerStatusRsp::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrPartnerStatusRsp.user_id)
}

// repeated .yespo.RoomsvrPartnerStatusItem status_item = 3;
inline int RoomsvrPartnerStatusRsp::status_item_size() const {
  return status_item_.size();
}
inline void RoomsvrPartnerStatusRsp::clear_status_item() {
  status_item_.Clear();
}
inline const ::yespo::RoomsvrPartnerStatusItem& RoomsvrPartnerStatusRsp::status_item(int index) const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrPartnerStatusRsp.status_item)
  return status_item_.Get(index);
}
inline ::yespo::RoomsvrPartnerStatusItem* RoomsvrPartnerStatusRsp::mutable_status_item(int index) {
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrPartnerStatusRsp.status_item)
  return status_item_.Mutable(index);
}
inline ::yespo::RoomsvrPartnerStatusItem* RoomsvrPartnerStatusRsp::add_status_item() {
  // @@protoc_insertion_point(field_add:yespo.RoomsvrPartnerStatusRsp.status_item)
  return status_item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::yespo::RoomsvrPartnerStatusItem >*
RoomsvrPartnerStatusRsp::mutable_status_item() {
  // @@protoc_insertion_point(field_mutable_list:yespo.RoomsvrPartnerStatusRsp.status_item)
  return &status_item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::yespo::RoomsvrPartnerStatusItem >&
RoomsvrPartnerStatusRsp::status_item() const {
  // @@protoc_insertion_point(field_list:yespo.RoomsvrPartnerStatusRsp.status_item)
  return status_item_;
}

// -------------------------------------------------------------------

// RoomsvrCheckExpireReq

// -------------------------------------------------------------------

// RoomsvrAstPeerStatusReq

// optional uint64 user_id = 1;
inline void RoomsvrAstPeerStatusReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrAstPeerStatusReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstPeerStatusReq.user_id)
  return user_id_;
}
inline void RoomsvrAstPeerStatusReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstPeerStatusReq.user_id)
}

// optional int32 peer_status = 2;
inline void RoomsvrAstPeerStatusReq::clear_peer_status() {
  peer_status_ = 0;
}
inline ::google::protobuf::int32 RoomsvrAstPeerStatusReq::peer_status() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstPeerStatusReq.peer_status)
  return peer_status_;
}
inline void RoomsvrAstPeerStatusReq::set_peer_status(::google::protobuf::int32 value) {
  
  peer_status_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstPeerStatusReq.peer_status)
}

// -------------------------------------------------------------------

// RoomsvrAstPeerStatusRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrAstPeerStatusRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrAstPeerStatusRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrAstPeerStatusRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstPeerStatusRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstPeerStatusRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstPeerStatusRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstPeerStatusRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrAstPeerStatusRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstPeerStatusRsp.rsp_msg)
}

// -------------------------------------------------------------------

// RoomsvrAstListCallReq

// optional string ast_pub_addr = 1;
inline void RoomsvrAstListCallReq::clear_ast_pub_addr() {
  ast_pub_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrAstListCallReq::ast_pub_addr() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstListCallReq.ast_pub_addr)
  return ast_pub_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstListCallReq::set_ast_pub_addr(const ::std::string& value) {
  
  ast_pub_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstListCallReq.ast_pub_addr)
}
inline void RoomsvrAstListCallReq::set_ast_pub_addr(const char* value) {
  
  ast_pub_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrAstListCallReq.ast_pub_addr)
}
inline void RoomsvrAstListCallReq::set_ast_pub_addr(const char* value, size_t size) {
  
  ast_pub_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrAstListCallReq.ast_pub_addr)
}
inline ::std::string* RoomsvrAstListCallReq::mutable_ast_pub_addr() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstListCallReq.ast_pub_addr)
  return ast_pub_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrAstListCallReq::release_ast_pub_addr() {
  
  return ast_pub_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstListCallReq::set_allocated_ast_pub_addr(::std::string* ast_pub_addr) {
  if (ast_pub_addr != NULL) {
    
  } else {
    
  }
  ast_pub_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ast_pub_addr);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstListCallReq.ast_pub_addr)
}

// optional string ast_addr = 2;
inline void RoomsvrAstListCallReq::clear_ast_addr() {
  ast_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrAstListCallReq::ast_addr() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstListCallReq.ast_addr)
  return ast_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstListCallReq::set_ast_addr(const ::std::string& value) {
  
  ast_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstListCallReq.ast_addr)
}
inline void RoomsvrAstListCallReq::set_ast_addr(const char* value) {
  
  ast_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrAstListCallReq.ast_addr)
}
inline void RoomsvrAstListCallReq::set_ast_addr(const char* value, size_t size) {
  
  ast_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrAstListCallReq.ast_addr)
}
inline ::std::string* RoomsvrAstListCallReq::mutable_ast_addr() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstListCallReq.ast_addr)
  return ast_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrAstListCallReq::release_ast_addr() {
  
  return ast_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstListCallReq::set_allocated_ast_addr(::std::string* ast_addr) {
  if (ast_addr != NULL) {
    
  } else {
    
  }
  ast_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ast_addr);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstListCallReq.ast_addr)
}

// repeated uint64 user_ids = 3;
inline int RoomsvrAstListCallReq::user_ids_size() const {
  return user_ids_.size();
}
inline void RoomsvrAstListCallReq::clear_user_ids() {
  user_ids_.Clear();
}
inline ::google::protobuf::uint64 RoomsvrAstListCallReq::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstListCallReq.user_ids)
  return user_ids_.Get(index);
}
inline void RoomsvrAstListCallReq::set_user_ids(int index, ::google::protobuf::uint64 value) {
  user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstListCallReq.user_ids)
}
inline void RoomsvrAstListCallReq::add_user_ids(::google::protobuf::uint64 value) {
  user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:yespo.RoomsvrAstListCallReq.user_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RoomsvrAstListCallReq::user_ids() const {
  // @@protoc_insertion_point(field_list:yespo.RoomsvrAstListCallReq.user_ids)
  return user_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RoomsvrAstListCallReq::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:yespo.RoomsvrAstListCallReq.user_ids)
  return &user_ids_;
}

// -------------------------------------------------------------------

// RoomsvrAstListCallRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrAstListCallRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrAstListCallRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrAstListCallRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstListCallRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstListCallRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstListCallRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstListCallRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrAstListCallRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstListCallRsp.rsp_msg)
}

// -------------------------------------------------------------------

// RoomsvrAstCallStatusReq

// optional uint64 user_id = 1;
inline void RoomsvrAstCallStatusReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrAstCallStatusReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStatusReq.user_id)
  return user_id_;
}
inline void RoomsvrAstCallStatusReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStatusReq.user_id)
}

// optional uint32 ast_call_status = 2;
inline void RoomsvrAstCallStatusReq::clear_ast_call_status() {
  ast_call_status_ = 0u;
}
inline ::google::protobuf::uint32 RoomsvrAstCallStatusReq::ast_call_status() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStatusReq.ast_call_status)
  return ast_call_status_;
}
inline void RoomsvrAstCallStatusReq::set_ast_call_status(::google::protobuf::uint32 value) {
  
  ast_call_status_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStatusReq.ast_call_status)
}

// optional string cdr_id = 3;
inline void RoomsvrAstCallStatusReq::clear_cdr_id() {
  cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrAstCallStatusReq::cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStatusReq.cdr_id)
  return cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStatusReq::set_cdr_id(const ::std::string& value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStatusReq.cdr_id)
}
inline void RoomsvrAstCallStatusReq::set_cdr_id(const char* value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrAstCallStatusReq.cdr_id)
}
inline void RoomsvrAstCallStatusReq::set_cdr_id(const char* value, size_t size) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrAstCallStatusReq.cdr_id)
}
inline ::std::string* RoomsvrAstCallStatusReq::mutable_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstCallStatusReq.cdr_id)
  return cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrAstCallStatusReq::release_cdr_id() {
  
  return cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStatusReq::set_allocated_cdr_id(::std::string* cdr_id) {
  if (cdr_id != NULL) {
    
  } else {
    
  }
  cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstCallStatusReq.cdr_id)
}

// optional string amisvr_addr = 4;
inline void RoomsvrAstCallStatusReq::clear_amisvr_addr() {
  amisvr_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrAstCallStatusReq::amisvr_addr() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStatusReq.amisvr_addr)
  return amisvr_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStatusReq::set_amisvr_addr(const ::std::string& value) {
  
  amisvr_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStatusReq.amisvr_addr)
}
inline void RoomsvrAstCallStatusReq::set_amisvr_addr(const char* value) {
  
  amisvr_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrAstCallStatusReq.amisvr_addr)
}
inline void RoomsvrAstCallStatusReq::set_amisvr_addr(const char* value, size_t size) {
  
  amisvr_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrAstCallStatusReq.amisvr_addr)
}
inline ::std::string* RoomsvrAstCallStatusReq::mutable_amisvr_addr() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstCallStatusReq.amisvr_addr)
  return amisvr_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrAstCallStatusReq::release_amisvr_addr() {
  
  return amisvr_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStatusReq::set_allocated_amisvr_addr(::std::string* amisvr_addr) {
  if (amisvr_addr != NULL) {
    
  } else {
    
  }
  amisvr_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), amisvr_addr);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstCallStatusReq.amisvr_addr)
}

// optional uint32 amisvr_port = 5;
inline void RoomsvrAstCallStatusReq::clear_amisvr_port() {
  amisvr_port_ = 0u;
}
inline ::google::protobuf::uint32 RoomsvrAstCallStatusReq::amisvr_port() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStatusReq.amisvr_port)
  return amisvr_port_;
}
inline void RoomsvrAstCallStatusReq::set_amisvr_port(::google::protobuf::uint32 value) {
  
  amisvr_port_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStatusReq.amisvr_port)
}

// optional string caller_channel = 6;
inline void RoomsvrAstCallStatusReq::clear_caller_channel() {
  caller_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrAstCallStatusReq::caller_channel() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStatusReq.caller_channel)
  return caller_channel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStatusReq::set_caller_channel(const ::std::string& value) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStatusReq.caller_channel)
}
inline void RoomsvrAstCallStatusReq::set_caller_channel(const char* value) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrAstCallStatusReq.caller_channel)
}
inline void RoomsvrAstCallStatusReq::set_caller_channel(const char* value, size_t size) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrAstCallStatusReq.caller_channel)
}
inline ::std::string* RoomsvrAstCallStatusReq::mutable_caller_channel() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstCallStatusReq.caller_channel)
  return caller_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrAstCallStatusReq::release_caller_channel() {
  
  return caller_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStatusReq::set_allocated_caller_channel(::std::string* caller_channel) {
  if (caller_channel != NULL) {
    
  } else {
    
  }
  caller_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller_channel);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstCallStatusReq.caller_channel)
}

// -------------------------------------------------------------------

// RoomsvrAstCallStatusRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrAstCallStatusRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrAstCallStatusRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrAstCallStatusRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStatusRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstCallStatusRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstCallStatusRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstCallStatusRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrAstCallStatusRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstCallStatusRsp.rsp_msg)
}

// -------------------------------------------------------------------

// RoomsvrVideoSendReq

// optional uint64 user_id = 1;
inline void RoomsvrVideoSendReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrVideoSendReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoSendReq.user_id)
  return user_id_;
}
inline void RoomsvrVideoSendReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrVideoSendReq.user_id)
}

// optional uint64 partner_id = 2;
inline void RoomsvrVideoSendReq::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrVideoSendReq::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoSendReq.partner_id)
  return partner_id_;
}
inline void RoomsvrVideoSendReq::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrVideoSendReq.partner_id)
}

// optional uint32 video_status = 3;
inline void RoomsvrVideoSendReq::clear_video_status() {
  video_status_ = 0u;
}
inline ::google::protobuf::uint32 RoomsvrVideoSendReq::video_status() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoSendReq.video_status)
  return video_status_;
}
inline void RoomsvrVideoSendReq::set_video_status(::google::protobuf::uint32 value) {
  
  video_status_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrVideoSendReq.video_status)
}

// -------------------------------------------------------------------

// RoomsvrVideoSendRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrVideoSendRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrVideoSendRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrVideoSendRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoSendRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrVideoSendRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrVideoSendRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrVideoSendRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrVideoSendRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrVideoSendRsp.rsp_msg)
}

// -------------------------------------------------------------------

// RoomsvrVideoRecvReq

// optional uint64 user_id = 1;
inline void RoomsvrVideoRecvReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrVideoRecvReq::user_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoRecvReq.user_id)
  return user_id_;
}
inline void RoomsvrVideoRecvReq::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrVideoRecvReq.user_id)
}

// optional uint64 partner_id = 2;
inline void RoomsvrVideoRecvReq::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrVideoRecvReq::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoRecvReq.partner_id)
  return partner_id_;
}
inline void RoomsvrVideoRecvReq::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrVideoRecvReq.partner_id)
}

// optional uint32 result = 3;
inline void RoomsvrVideoRecvReq::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 RoomsvrVideoRecvReq::result() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoRecvReq.result)
  return result_;
}
inline void RoomsvrVideoRecvReq::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrVideoRecvReq.result)
}

// -------------------------------------------------------------------

// RoomsvrVideoRecvRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrVideoRecvRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrVideoRecvRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrVideoRecvRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrVideoRecvRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrVideoRecvRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrVideoRecvRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrVideoRecvRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrVideoRecvRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrVideoRecvRsp.rsp_msg)
}

// -------------------------------------------------------------------

// RoomsvrAstCallStateReq

// optional uint32 role = 1;
inline void RoomsvrAstCallStateReq::clear_role() {
  role_ = 0u;
}
inline ::google::protobuf::uint32 RoomsvrAstCallStateReq::role() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStateReq.role)
  return role_;
}
inline void RoomsvrAstCallStateReq::set_role(::google::protobuf::uint32 value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStateReq.role)
}

// optional uint32 state = 2;
inline void RoomsvrAstCallStateReq::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 RoomsvrAstCallStateReq::state() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStateReq.state)
  return state_;
}
inline void RoomsvrAstCallStateReq::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStateReq.state)
}

// optional uint32 ringing_time = 3;
inline void RoomsvrAstCallStateReq::clear_ringing_time() {
  ringing_time_ = 0u;
}
inline ::google::protobuf::uint32 RoomsvrAstCallStateReq::ringing_time() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStateReq.ringing_time)
  return ringing_time_;
}
inline void RoomsvrAstCallStateReq::set_ringing_time(::google::protobuf::uint32 value) {
  
  ringing_time_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStateReq.ringing_time)
}

// optional string cdr_id = 4;
inline void RoomsvrAstCallStateReq::clear_cdr_id() {
  cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrAstCallStateReq::cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStateReq.cdr_id)
  return cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStateReq::set_cdr_id(const ::std::string& value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStateReq.cdr_id)
}
inline void RoomsvrAstCallStateReq::set_cdr_id(const char* value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrAstCallStateReq.cdr_id)
}
inline void RoomsvrAstCallStateReq::set_cdr_id(const char* value, size_t size) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrAstCallStateReq.cdr_id)
}
inline ::std::string* RoomsvrAstCallStateReq::mutable_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstCallStateReq.cdr_id)
  return cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrAstCallStateReq::release_cdr_id() {
  
  return cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStateReq::set_allocated_cdr_id(::std::string* cdr_id) {
  if (cdr_id != NULL) {
    
  } else {
    
  }
  cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstCallStateReq.cdr_id)
}

// optional string reason = 5;
inline void RoomsvrAstCallStateReq::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrAstCallStateReq::reason() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStateReq.reason)
  return reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStateReq::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrAstCallStateReq.reason)
}
inline void RoomsvrAstCallStateReq::set_reason(const char* value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrAstCallStateReq.reason)
}
inline void RoomsvrAstCallStateReq::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrAstCallStateReq.reason)
}
inline ::std::string* RoomsvrAstCallStateReq::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstCallStateReq.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrAstCallStateReq::release_reason() {
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrAstCallStateReq::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstCallStateReq.reason)
}

// -------------------------------------------------------------------

// RoomsvrAstCallStateRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrAstCallStateRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrAstCallStateRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrAstCallStateRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrAstCallStateRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstCallStateRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrAstCallStateRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrAstCallStateRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrAstCallStateRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrAstCallStateRsp.rsp_msg)
}

// -------------------------------------------------------------------

// RoomsvrInsufficientReq

// optional string cdr_id = 1;
inline void RoomsvrInsufficientReq::clear_cdr_id() {
  cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrInsufficientReq::cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrInsufficientReq.cdr_id)
  return cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrInsufficientReq::set_cdr_id(const ::std::string& value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrInsufficientReq.cdr_id)
}
inline void RoomsvrInsufficientReq::set_cdr_id(const char* value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrInsufficientReq.cdr_id)
}
inline void RoomsvrInsufficientReq::set_cdr_id(const char* value, size_t size) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrInsufficientReq.cdr_id)
}
inline ::std::string* RoomsvrInsufficientReq::mutable_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrInsufficientReq.cdr_id)
  return cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrInsufficientReq::release_cdr_id() {
  
  return cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrInsufficientReq::set_allocated_cdr_id(::std::string* cdr_id) {
  if (cdr_id != NULL) {
    
  } else {
    
  }
  cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrInsufficientReq.cdr_id)
}

// optional string caller_channel = 2;
inline void RoomsvrInsufficientReq::clear_caller_channel() {
  caller_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomsvrInsufficientReq::caller_channel() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrInsufficientReq.caller_channel)
  return caller_channel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrInsufficientReq::set_caller_channel(const ::std::string& value) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.RoomsvrInsufficientReq.caller_channel)
}
inline void RoomsvrInsufficientReq::set_caller_channel(const char* value) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.RoomsvrInsufficientReq.caller_channel)
}
inline void RoomsvrInsufficientReq::set_caller_channel(const char* value, size_t size) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.RoomsvrInsufficientReq.caller_channel)
}
inline ::std::string* RoomsvrInsufficientReq::mutable_caller_channel() {
  
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrInsufficientReq.caller_channel)
  return caller_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomsvrInsufficientReq::release_caller_channel() {
  
  return caller_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomsvrInsufficientReq::set_allocated_caller_channel(::std::string* caller_channel) {
  if (caller_channel != NULL) {
    
  } else {
    
  }
  caller_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller_channel);
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrInsufficientReq.caller_channel)
}

// optional uint64 caller_id = 3;
inline void RoomsvrInsufficientReq::clear_caller_id() {
  caller_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrInsufficientReq::caller_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrInsufficientReq.caller_id)
  return caller_id_;
}
inline void RoomsvrInsufficientReq::set_caller_id(::google::protobuf::uint64 value) {
  
  caller_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrInsufficientReq.caller_id)
}

// optional uint64 partner_id = 4;
inline void RoomsvrInsufficientReq::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoomsvrInsufficientReq::partner_id() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrInsufficientReq.partner_id)
  return partner_id_;
}
inline void RoomsvrInsufficientReq::set_partner_id(::google::protobuf::uint64 value) {
  
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:yespo.RoomsvrInsufficientReq.partner_id)
}

// -------------------------------------------------------------------

// RoomsvrInsufficientRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool RoomsvrInsufficientRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void RoomsvrInsufficientRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& RoomsvrInsufficientRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.RoomsvrInsufficientRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrInsufficientRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.RoomsvrInsufficientRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* RoomsvrInsufficientRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void RoomsvrInsufficientRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.RoomsvrInsufficientRsp.rsp_msg)
}

// -------------------------------------------------------------------

// BillingSvrTimerBillingReq

// -------------------------------------------------------------------

// BillingSvrStartBillingReq

// optional string cdr_id = 1;
inline void BillingSvrStartBillingReq::clear_cdr_id() {
  cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillingSvrStartBillingReq::cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.BillingSvrStartBillingReq.cdr_id)
  return cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillingSvrStartBillingReq::set_cdr_id(const ::std::string& value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.BillingSvrStartBillingReq.cdr_id)
}
inline void BillingSvrStartBillingReq::set_cdr_id(const char* value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.BillingSvrStartBillingReq.cdr_id)
}
inline void BillingSvrStartBillingReq::set_cdr_id(const char* value, size_t size) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.BillingSvrStartBillingReq.cdr_id)
}
inline ::std::string* BillingSvrStartBillingReq::mutable_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.BillingSvrStartBillingReq.cdr_id)
  return cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillingSvrStartBillingReq::release_cdr_id() {
  
  return cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillingSvrStartBillingReq::set_allocated_cdr_id(::std::string* cdr_id) {
  if (cdr_id != NULL) {
    
  } else {
    
  }
  cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.BillingSvrStartBillingReq.cdr_id)
}

// -------------------------------------------------------------------

// BillingSvrStartBillingRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool BillingSvrStartBillingRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void BillingSvrStartBillingRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& BillingSvrStartBillingRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.BillingSvrStartBillingRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* BillingSvrStartBillingRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.BillingSvrStartBillingRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* BillingSvrStartBillingRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void BillingSvrStartBillingRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.BillingSvrStartBillingRsp.rsp_msg)
}

// -------------------------------------------------------------------

// BillingSvrFinishBillingReq

// optional string cdr_id = 1;
inline void BillingSvrFinishBillingReq::clear_cdr_id() {
  cdr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillingSvrFinishBillingReq::cdr_id() const {
  // @@protoc_insertion_point(field_get:yespo.BillingSvrFinishBillingReq.cdr_id)
  return cdr_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillingSvrFinishBillingReq::set_cdr_id(const ::std::string& value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.BillingSvrFinishBillingReq.cdr_id)
}
inline void BillingSvrFinishBillingReq::set_cdr_id(const char* value) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.BillingSvrFinishBillingReq.cdr_id)
}
inline void BillingSvrFinishBillingReq::set_cdr_id(const char* value, size_t size) {
  
  cdr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.BillingSvrFinishBillingReq.cdr_id)
}
inline ::std::string* BillingSvrFinishBillingReq::mutable_cdr_id() {
  
  // @@protoc_insertion_point(field_mutable:yespo.BillingSvrFinishBillingReq.cdr_id)
  return cdr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillingSvrFinishBillingReq::release_cdr_id() {
  
  return cdr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillingSvrFinishBillingReq::set_allocated_cdr_id(::std::string* cdr_id) {
  if (cdr_id != NULL) {
    
  } else {
    
  }
  cdr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdr_id);
  // @@protoc_insertion_point(field_set_allocated:yespo.BillingSvrFinishBillingReq.cdr_id)
}

// -------------------------------------------------------------------

// BillingSvrFinishBillingRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool BillingSvrFinishBillingRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void BillingSvrFinishBillingRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& BillingSvrFinishBillingRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.BillingSvrFinishBillingRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* BillingSvrFinishBillingRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.BillingSvrFinishBillingRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* BillingSvrFinishBillingRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void BillingSvrFinishBillingRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.BillingSvrFinishBillingRsp.rsp_msg)
}

// -------------------------------------------------------------------

// AmiSvrHangupReq

// optional string caller_channel = 1;
inline void AmiSvrHangupReq::clear_caller_channel() {
  caller_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmiSvrHangupReq::caller_channel() const {
  // @@protoc_insertion_point(field_get:yespo.AmiSvrHangupReq.caller_channel)
  return caller_channel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmiSvrHangupReq::set_caller_channel(const ::std::string& value) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yespo.AmiSvrHangupReq.caller_channel)
}
inline void AmiSvrHangupReq::set_caller_channel(const char* value) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yespo.AmiSvrHangupReq.caller_channel)
}
inline void AmiSvrHangupReq::set_caller_channel(const char* value, size_t size) {
  
  caller_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yespo.AmiSvrHangupReq.caller_channel)
}
inline ::std::string* AmiSvrHangupReq::mutable_caller_channel() {
  
  // @@protoc_insertion_point(field_mutable:yespo.AmiSvrHangupReq.caller_channel)
  return caller_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmiSvrHangupReq::release_caller_channel() {
  
  return caller_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmiSvrHangupReq::set_allocated_caller_channel(::std::string* caller_channel) {
  if (caller_channel != NULL) {
    
  } else {
    
  }
  caller_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller_channel);
  // @@protoc_insertion_point(field_set_allocated:yespo.AmiSvrHangupReq.caller_channel)
}

// -------------------------------------------------------------------

// AmiSvrHangupRsp

// optional .yespo.RspMsg rsp_msg = 1;
inline bool AmiSvrHangupRsp::has_rsp_msg() const {
  return !_is_default_instance_ && rsp_msg_ != NULL;
}
inline void AmiSvrHangupRsp::clear_rsp_msg() {
  if (GetArenaNoVirtual() == NULL && rsp_msg_ != NULL) delete rsp_msg_;
  rsp_msg_ = NULL;
}
inline const ::yespo::RspMsg& AmiSvrHangupRsp::rsp_msg() const {
  // @@protoc_insertion_point(field_get:yespo.AmiSvrHangupRsp.rsp_msg)
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::yespo::RspMsg* AmiSvrHangupRsp::mutable_rsp_msg() {
  
  if (rsp_msg_ == NULL) {
    rsp_msg_ = new ::yespo::RspMsg;
  }
  // @@protoc_insertion_point(field_mutable:yespo.AmiSvrHangupRsp.rsp_msg)
  return rsp_msg_;
}
inline ::yespo::RspMsg* AmiSvrHangupRsp::release_rsp_msg() {
  
  ::yespo::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void AmiSvrHangupRsp::set_allocated_rsp_msg(::yespo::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yespo.AmiSvrHangupRsp.rsp_msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace yespo

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::yespo::NodeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::NodeType>() {
  return ::yespo::NodeType_descriptor();
}
template <> struct is_proto_enum< ::yespo::MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::MsgType>() {
  return ::yespo::MsgType_descriptor();
}
template <> struct is_proto_enum< ::yespo::UserType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::UserType>() {
  return ::yespo::UserType_descriptor();
}
template <> struct is_proto_enum< ::yespo::OnlineStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::OnlineStatus>() {
  return ::yespo::OnlineStatus_descriptor();
}
template <> struct is_proto_enum< ::yespo::RoomStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::RoomStatus>() {
  return ::yespo::RoomStatus_descriptor();
}
template <> struct is_proto_enum< ::yespo::BillingStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::BillingStatus>() {
  return ::yespo::BillingStatus_descriptor();
}
template <> struct is_proto_enum< ::yespo::AstPeerStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::AstPeerStatus>() {
  return ::yespo::AstPeerStatus_descriptor();
}
template <> struct is_proto_enum< ::yespo::AstCallStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::AstCallStatus>() {
  return ::yespo::AstCallStatus_descriptor();
}
template <> struct is_proto_enum< ::yespo::VideoSendStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::VideoSendStatus>() {
  return ::yespo::VideoSendStatus_descriptor();
}
template <> struct is_proto_enum< ::yespo::VideoRecvResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::VideoRecvResult>() {
  return ::yespo::VideoRecvResult_descriptor();
}
template <> struct is_proto_enum< ::yespo::AstCallRole> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::AstCallRole>() {
  return ::yespo::AstCallRole_descriptor();
}
template <> struct is_proto_enum< ::yespo::AstCallState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::AstCallState>() {
  return ::yespo::AstCallState_descriptor();
}
template <> struct is_proto_enum< ::yespo::RspCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yespo::RspCode>() {
  return ::yespo::RspCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_yespo_5fprotocol_2eproto__INCLUDED
